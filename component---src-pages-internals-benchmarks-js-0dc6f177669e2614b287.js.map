{"version":3,"sources":["webpack:///./src/components/benchmarks/benchmarks-table.js","webpack:///./src/pages/internals/benchmarks.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js"],"names":["benchmarks_table","_ref","suites","libraries","useMemo","map","Map","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","length","next","done","value","_iterator2","results","_isArray2","_i2","_ref3","result","has","library","id","set","from","values","sort","a","b","name","localeCompare","grid","suite","rows","_loop","_isArray3","_i3","_iterator3","_ref4","row","find","r","component","iterations","fill","push","index","findIndex","l","averageValue","times","reduce","Object","assign","toLowerCase","toLocaleString","useGrouping","react_default","createElement","colSpan","rowSpan","className","styles","column","key","_ref5","iterationCount","missing","toFixed","title","__webpack_exports__","_staticQueryData$data","_2228552004","data","allBenchmarkSuite","nodes","_staticQueryData$data2","site","siteMetadata","githubUrl","projectName","Fragment","Helmet","external_link","to","$export","__webpack_require__","$find","forced","P","F","callbackfn","this","arguments","undefined","KEY","toObject","toAbsoluteIndex","toLength","module","exports","O","aLen","end","endPos"],"mappings":"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","file":"component---src-pages-internals-benchmarks-js-0dc6f177669e2614b287.js","sourcesContent":["import React, { useMemo } from 'react'\n\nimport styles from './benchmarks-table.module.scss'\n\nexport default ({ suites }) => {\n  const libraries = useMemo(() => {\n    const map = new Map()\n\n    for (const suite of suites) {\n      for (const result of suite.results) {\n        if (!map.has(result.library.id)) {\n          map.set(result.library.id, result.library)\n        }\n      }\n    }\n\n    return Array.from(map.values())\n      .sort((a, b) => a.name.localeCompare(b.name))\n  }, [suites])\n\n  const grid = useMemo(() => suites.map(suite => {\n    const rows = []\n\n    for (const result of suite.results) {\n      let row = rows.find(r =>\n        r.component === result.component &&\n        r.iterations === result.iterations\n      )\n\n      if (!row) {\n        row = {\n          component: result.component,\n          iterations: result.iterations,\n          results: new Array(libraries.length).fill(null)\n        }\n\n        rows.push(row)\n      }\n\n      const index = libraries.findIndex(l => l.id === result.library.id)\n\n      if (index > -1) {\n        row.results[index] = {\n          averageValue: result.times.reduce((a, b) => a + b) / result.times.length,\n          values: result.times\n        }\n      }\n    }\n\n    return {\n      rows: rows\n        .map(row => ({\n          ...row,\n          component: row.component.toLowerCase(),\n          iterations: row.iterations.toLocaleString({\n            useGrouping: true\n          })\n        }))\n        .sort((a, b) => a.component.localeCompare(b.component)),\n      suite\n    }\n  }).sort((a, b) => a.suite.name.localeCompare(b.suite.name)), [suites])\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th colSpan={2} rowSpan={2}>Benchmark</th>\n          <th colSpan={libraries.length}>Average time (ms)</th>\n        </tr>\n        <tr>\n          {libraries.map(library =>\n            <th className={styles.column} key={library.id}>{library.name}</th>\n          )}\n        </tr>\n      </thead>\n\n      <tbody>\n        {grid.map(({ rows, suite }) => rows.map((row, index) =>\n          <tr key={index}>\n            {index === 0 &&\n              <th className={styles.suite} rowSpan={rows.length}>\n                {suite.name}\n              </th>\n            }\n\n            <td className={styles.component}>\n              <div>{row.component}</div>\n              <div className={styles.iterationCount}>{row.iterations} iterations</div>\n            </td>\n\n            {row.results.map((result, index) =>\n              <td className={result ? styles.result : styles.missing} key={index}>\n                {result\n                  ? result.averageValue.toFixed(3)\n                  : 'n/a'\n                }\n              </td>\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport BenchmarksTable from '../../components/benchmarks/benchmarks-table'\nimport ExternalLink from '../../components/site/external-link'\n\nconst title = 'Performance and benchmarks'\n\nexport default () => {\n  const {\n    allBenchmarkSuite: { nodes: suites },\n    site: {\n      siteMetadata: { githubUrl, projectName }\n    }\n  } = useStaticQuery(graphql`\n    query {\n      allBenchmarkSuite {\n        nodes {\n          id\n          name\n          results {\n            component\n            iterations\n            library {\n              id\n              name\n            }\n            times\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          githubUrl\n          projectName\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n\n      <h1>{title}</h1>\n      <p>To ensure that changes to {projectName} donâ€™t introduce major performance regressions (and to highlight areas where performance could be improved), we maintain a <ExternalLink to={`${githubUrl}/tree/master/benchmarks`}>set of rudimentary benchmarks</ExternalLink> to test serialization throughput.</p>\n      <p>Each benchmark runs five times, and we take the average time of those runs. These results were collected on a 2017 MacBook Pro (3.1 GHz Intel Core i5):</p>\n\n      <BenchmarksTable suites={suites} />\n\n      <p>In the future, weâ€™re hoping to expand the benchmarks to test more complex situations as well as non-.NET libraries.</p>\n    </>\n  )\n}\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}