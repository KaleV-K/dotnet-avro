{"version":3,"sources":["webpack:///./src/components/dotnet/inheritance-table.js","webpack:///./src/components/dotnet/member-detail.js","webpack:///./src/components/dotnet/overload-table.js","webpack:///./src/templates/dotnet-member.js","webpack:///./node_modules/@rgrove/parse-xml/dist/commonjs/lib/syntax.js","webpack:///./src/components/code/render.js","webpack:///./src/components/dotnet/xml-doc.js","webpack:///./node_modules/core-js/modules/es6.date.to-json.js","webpack:///./node_modules/core-js/modules/es6.object.freeze.js","webpack:///./node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/core-js/modules/es6.string.from-code-point.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/_string-repeat.js","webpack:///./node_modules/@rgrove/parse-xml/dist/commonjs/index.js","webpack:///./src/components/site/breadcrumb.js","webpack:///./utilities/xml.js"],"names":["member","object","type","assembly","base","interfaces","namespace","signature","typeSignatures","memberSignatures","find","s","language","typeParameters","map","p","name","className","styles","table","id","value","length","index","key","rowSpan","exceptions","kind","parameters","remarks","returns","summary","typeParameterNames","methodTypeParameterNames","xml","parameter","methodTypeParameters","exception","overloads","overload","dotnetMember","data","Helmet","to","title","query","_templateObject18","_taggedTemplateLiteralLoose","_templateObject17","_templateObject16","_templateObject15","_templateObject14","_templateObject13","_templateObject12","_templateObject11","_templateObject10","_templateObject9","_templateObject8","_templateObject7","_templateObject6","_templateObject5","_templateObject4","_templateObject3","_templateObject2","_templateObject","strings","raw","slice","regex","lastIndex","pattern","_len","arguments","embeddedPatterns","Array","_key","i","replace","source","RegExp","exports","Char","CharData","NameStartChar","NameChar","Name","Reference","S","Eq","Attribute","CDSect","EmptyElemTag","ETag","STag","CharOnly","Comment","doctypedecl","PI","XMLDecl","Anchored","Global","Object","keys","forEach","hydrate","nodes","node","content","children","match","attributes","createElement","Fragment","text","filter","c","parse","cref","$export","toObject","toPrimitive","P","F","Date","NaN","toJSON","prototype","call","toISOString","O","this","pv","isFinite","isObject","meta","onFreeze","$freeze","it","repeat","toAbsoluteIndex","fromCharCode","String","$fromCodePoint","fromCodePoint","x","code","res","aLen","RangeError","push","join","$find","forced","callbackfn","undefined","toInteger","defined","module","count","str","n","Infinity","Syntax","emptyArray","freeze","emptyObject","create","namedEntities","NODE_TYPE_CDATA","NODE_TYPE_COMMENT","NODE_TYPE_ELEMENT","NODE_TYPE_TEXT","addNode","state","parent","nodeToJson","addText","prevNode","consumeCDSect","_scan","scan","options","preserveCdata","consumeCharData","cdataCloseIndex","indexOf","pos","prevPos","error","test","search","consumeComment","preserveComments","trim","consumeMisc","consumePI","consumeWhitespace","_scan7","target","toLowerCase","consumeReference","ref","replaceReference","message","column","excerpt","line","_char","eol","excerptStart","err","Error","json","assign","normalizeAttrValue","codePoint","parseInt","isNaN","_char2","resolveUndefinedEntity","resolvedValue","ignoreUndefinedEntities","matches","doc","bind","consumeDoctypeDecl","consumeProlog","consumeElement","_scan4","tag","attrs","isEmpty","_scan5","parsedAttrs","attrPairs","sort","len","attrPair","eqMatch","parseAttrs","xmlSpace","preserveWhitespace","isEof","others","isArray","breadcrumb","child","require","getMarkup","include","k","getText"],"mappings":"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","file":"component---src-templates-dotnet-member-js-6f01e1716c7b5aa2a8c0.js","sourcesContent":["import React from 'react'\n\nimport Highlight from '../code/highlight'\nimport DotnetReference from '../references/dotnet'\n\nimport styles from './inheritance-table.module.scss'\n\nexport default ({ member, type }) => {\n  const object = type || member\n\n  const { assembly, base, interfaces, namespace } = object\n  const signature = (object.typeSignatures || object.memberSignatures || []).find(s => s.language === 'C#')\n  const typeParameters = (object.typeParameters || []).map(p => p.name)\n\n  return (\n    <table className={styles.table}>\n      <tbody>\n        {assembly &&\n          <tr>\n            <th>Assembly</th>\n            <td>\n              <DotnetReference id={assembly.id} />\n            </td>\n          </tr>\n        }\n\n        {namespace &&\n          <tr>\n            <th>Namespace</th>\n            <td>\n              <DotnetReference id={namespace.id} />\n            </td>\n          </tr>\n        }\n\n        {signature &&\n          <tr>\n            <th>Signature</th>\n            <td>\n              <Highlight language='csharp'>{signature.value}</Highlight>\n            </td>\n          </tr>\n        }\n\n        {base &&\n          <tr>\n            <th>Base</th>\n            <td>\n              <DotnetReference id={base} typeParameters={typeParameters} />\n            </td>\n          </tr>\n        }\n\n        {interfaces && interfaces.length > 0 && interfaces.map((id, index) =>\n          <tr key={index}>\n            {index === 0 &&\n              <th rowSpan={interfaces.length}>Interfaces</th>\n            }\n            <td>\n              <DotnetReference id={id} typeParameters={typeParameters} />\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport DotnetReference from '../references/dotnet'\n\nimport InheritanceTable from './inheritance-table'\nimport XmlDoc from './xml-doc'\n\nexport default ({ member }) => {\n  const { exceptions, kind, parameters, remarks, returns, summary, type, typeParameters } = member\n\n  const typeParameterNames = (type.typeParameters || []).map(p => p.name)\n  const methodTypeParameterNames = (typeParameters || []).map(p => p.name)\n\n  return (\n    <>\n      {summary &&\n        <XmlDoc xml={summary} />\n      }\n\n      <InheritanceTable member={member} />\n\n      {remarks &&\n        <XmlDoc xml={remarks} />\n      }\n\n      {typeParameters && typeParameters.length > 0 &&\n        <>\n          <h3>Type parameters</h3>\n          {typeParameters.map((parameter, index) =>\n            <Fragment key={index}>\n              <h5>{parameter.name}</h5>\n              {parameter.summary && <XmlDoc xml={parameter.summary} />}\n            </Fragment>\n          )}\n        </>\n      }\n\n      {parameters && parameters.length > 0 &&\n        <>\n          <h3>Parameters</h3>\n          {parameters.map((parameter, index) =>\n            <Fragment key={index}>\n              <h5><DotnetReference id={parameter.type} typeParameters={typeParameterNames} methodTypeParameters={methodTypeParameterNames} /> {parameter.name}</h5>\n              {parameter.summary && <XmlDoc xml={parameter.summary} />}\n            </Fragment>\n          )}\n        </>\n      }\n\n      {returns &&\n        <>\n          <h3>{kind === 'method'\n            ? 'Return type'\n            : 'Type'\n          }</h3>\n          <h5><DotnetReference id={returns.type} typeParameters={typeParameterNames} methodTypeParameters={methodTypeParameterNames} /></h5>\n          {returns.summary && <XmlDoc xml={returns.summary} />}\n        </>\n      }\n\n      {exceptions && exceptions.length > 0 &&\n        <>\n          <h3>Exceptions</h3>\n          {exceptions.map((exception, index) =>\n            <Fragment key={index}>\n              <h5><DotnetReference id={exception.type} typeParameters={typeParameterNames} methodTypeParameters={methodTypeParameterNames} /></h5>\n              {exception.summary && <XmlDoc xml={exception.summary} />}\n            </Fragment>\n          )}\n        </>\n      }\n    </>\n  )\n}\n","import React, { Fragment } from 'react'\n\nimport DotnetReference from '../references/dotnet'\n\nimport MemberDetail from './member-detail'\nimport XmlDoc from './xml-doc'\n\nimport styles from './overload-table.module.scss'\n\nexport default ({ member }) =>\n  <>\n    <table className={styles.table}>\n      <tbody>\n        {member.overloads.map(overload =>\n          <tr key={overload.id}>\n            <th><DotnetReference id={overload.id} /></th>\n            <td>{overload.summary && <XmlDoc xml={overload.summary} />}</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n\n    {member.overloads.map(overload =>\n      <Fragment key={overload.id}>\n        <h3><DotnetReference id={overload.id} /></h3>\n        <MemberDetail key={overload.id} member={{ ...member, ...overload }} />\n      </Fragment>\n    )}\n  </>\n","import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport MemberDetail from '../components/dotnet/member-detail'\nimport OverloadTable from '../components/dotnet/overload-table'\nimport DotnetReference from '../components/references/dotnet'\nimport Breadcrumb from '../components/site/breadcrumb'\n\nimport styles from './dotnet.module.scss'\n\nexport default ({ data: { dotnetMember }}) => {\n  const { kind, name, overloads, type } = dotnetMember\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${kind === 'constructor' ? type.name : name} ${kind}`}</title>\n      </Helmet>\n\n      <Breadcrumb>\n        <Link to='/api'>API reference</Link>\n        <DotnetReference id={type.namespace.id}>\n          <code>{type.namespace.name}</code> namespace\n        </DotnetReference>\n        <DotnetReference id={type.id}>\n          <code>{type.name}</code> {type.kind}\n        </DotnetReference>\n      </Breadcrumb>\n\n      <h1 className={styles.title}>\n        <code>{kind === 'constructor' ? type.name : name}</code> {kind}\n      </h1>\n\n      {overloads.length === 1\n        ? <MemberDetail member={{ ...dotnetMember, ...overloads[0] }} />\n        : <OverloadTable member={dotnetMember} />\n      }\n    </>\n  )\n}\n\nexport const query = graphql`\n  query DotnetMemberDetailQuery($id: String!) {\n    dotnetMember(id: { eq: $id }) {\n      id\n      kind\n      name\n      overloads {\n        id\n        base\n        exceptions {\n          summary\n          type\n        }\n        memberSignatures {\n          language\n          value\n        }\n        parameters {\n          name\n          summary\n          type\n        }\n        remarks\n        returns {\n          summary\n          type\n        }\n        summary\n        typeParameters {\n          name\n          summary\n        }\n      }\n      type {\n        id\n        kind\n        name\n        namespace {\n          id\n          name\n        }\n        typeParameters {\n          name\n        }\n      }\n    }\n  }\n`\n","'use strict'; // To improve readability, the regular expression patterns in this file are\n// written as tagged template literals. The `regex` tag function strips literal\n// whitespace characters and line comments beginning with `//` and returns a\n// RegExp instance.\n//\n// Escape sequences are preserved as-is in the resulting regex, so\n// double-escaping isn't necessary. A pattern may embed another pattern using\n// `${}` interpolation.\n// -- Common Symbols -----------------------------------------------------------\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  <?xml\\n    \", \"\\n    [sS]+?\\n  ?>\\n\"], [\"\\n  <\\\\?xml\\n    \", \"\\n    [\\\\s\\\\S]+?\\n  \\\\?>\\n\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  <?\\n    // Group 1: PITarget\\n    (\\n      \", \"\\n    )\\n\\n    (?:\\n      \", \"\\n      (?:\", \")*?\\n    )?\\n  ?>\\n\"], [\"\\n  <\\\\?\\n    // Group 1: PITarget\\n    (\\n      \", \"\\n    )\\n\\n    (?:\\n      \", \"\\n      (?:\", \")*?\\n    )?\\n  \\\\?>\\n\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  <!DOCTYPE\\n    \", \"\\n\\n    [^[>]*\\n\\n    (?:\\n      [ [sS]+? ]\\n      (?:\", \")?\\n    )?\\n  >\\n\"], [\"\\n  <!DOCTYPE\\n    \", \"\\n\\n    [^[>]*\\n\\n    (?:\\n      \\\\[ [\\\\s\\\\S]+? \\\\]\\n      (?:\", \")?\\n    )?\\n  >\\n\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  <!--\\n    // Group 1: Comment text (optional)\\n    (\\n      (?:\\n        (?!-) \", \"\\n        | - (?!-) \", \"\\n      )*\\n    )\\n  -->\\n\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  ^(?:\", \")*$\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  <\\n    // Group 1: Start tag name\\n    (\", \")\\n\\n    // Group 2: Attributes (optional)\\n    (\\n      (?:\\n        \", \"\\n        \", \"\\n      )*\\n    )\\n\\n    (?:\", \")?\\n  >\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  </\\n    // Group 1: End tag name\\n    (\", \")\\n    (?:\", \")?\\n  >\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  <\\n    // Group 1: Element name\\n    (\", \")\\n\\n    // Group 2: Attributes (optional)\\n    (\\n      (?:\\n        \", \"\\n        \", \"\\n      )*\\n    )\\n\\n    (?:\", \")?\\n  />\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  <![CDATA[\\n    // Group 1: CData text content (optional)\\n    (\\n      (?:\", \")*?\\n    )\\n  ]]>\\n\"], [\"\\n  <!\\\\[CDATA\\\\[\\n    // Group 1: CData text content (optional)\\n    (\\n      (?:\", \")*?\\n    )\\n  \\\\]\\\\]>\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  \", \"\\n  \", \"\\n\\n  (?:\\n    \\\"(?:\\n      [^<&\\\"] | \", \"\\n    )*\\\"\\n\\n    |\\n\\n    '(?:\\n      [^<&'] | \", \"\\n    )*'\\n  )\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  (?:\", \")?\\n  =\\n  (?:\", \")?\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  [ \\t\\r\\n]+\\n\"], [\"\\n  [\\\\x20\\\\t\\\\r\\\\n]+\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  &S+?;\\n\"], [\"\\n  &\\\\S+?;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  \", \"\\n  (?:\", \")*\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  (?:\\n    \", \"\\n\\n    |\\n\\n    [\\n      .\\n      0-9\\n      \\xB7\\n      \\u0300-\\u036F\\n      \\u203F-\\u2040\\n      -\\n    ]\\n  )\\n\"], [\"\\n  (?:\\n    \", \"\\n\\n    |\\n\\n    [\\n      .\\n      0-9\\n      \\\\xB7\\n      \\\\u0300-\\\\u036F\\n      \\\\u203F-\\\\u2040\\n      -\\n    ]\\n  )\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  (?:\\n    [\\n      :\\n      A-Z\\n      _\\n      a-z\\n      \\xC0-\\xD6\\n      \\xD8-\\xF6\\n      \\xF8-\\u02FF\\n      \\u0370-\\u037D\\n      \\u037F-\\u1FFF\\n      \\u200C-\\u200D\\n      \\u2070-\\u218F\\n      \\u2C00-\\u2FEF\\n      \\u3001-\\uD7FF\\n      \\uF900-\\uFDCF\\n      \\uFDF0-\\uFFFD\\n    ]\\n\\n    |\\n\\n    [\\uD800-\\uDB7F][\\uDC00-\\uDFFF]\\n  )\\n\"], [\"\\n  (?:\\n    [\\n      :\\n      A-Z\\n      _\\n      a-z\\n      \\\\xC0-\\\\xD6\\n      \\\\xD8-\\\\xF6\\n      \\\\xF8-\\\\u02FF\\n      \\\\u0370-\\\\u037D\\n      \\\\u037F-\\\\u1FFF\\n      \\\\u200C-\\\\u200D\\n      \\\\u2070-\\\\u218F\\n      \\\\u2C00-\\\\u2FEF\\n      \\\\u3001-\\\\uD7FF\\n      \\\\uF900-\\\\uFDCF\\n      \\\\uFDF0-\\\\uFFFD\\n    ]\\n\\n    |\\n\\n    [\\\\uD800-\\\\uDB7F][\\\\uDC00-\\\\uDFFF]\\n  )\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  [^<&]+\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  (?:\\n    [\\n      \\t\\n      \\n\\n      \\r\\n       -\\uD7FF\\n      \\uE000-\\uFFFD\\n    ]\\n\\n    |\\n\\n    [\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\\n  )\\n\"], [\"\\n  (?:\\n    [\\n      \\\\t\\n      \\\\n\\n      \\\\r\\n      \\\\x20-\\\\uD7FF\\n      \\\\uE000-\\\\uFFFD\\n    ]\\n\\n    |\\n\\n    [\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]\\n  )\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nexports.Char = regex(_templateObject()); // Partial implementation.\n//\n// To be compliant, the matched text must result in an error if it contains the\n// string `]]>`, but that can't be easily represented here so we do it in the\n// parser.\n\nexports.CharData = regex(_templateObject2());\nexports.NameStartChar = regex(_templateObject3());\nexports.NameChar = regex(_templateObject4(), exports.NameStartChar);\nexports.Name = regex(_templateObject5(), exports.NameStartChar, exports.NameChar); // Loose implementation. The entity will be validated in the `replaceReference`\n// function.\n\nexports.Reference = regex(_templateObject6());\nexports.S = regex(_templateObject7()); // -- Attributes ---------------------------------------------------------------\n\nexports.Eq = regex(_templateObject8(), exports.S, exports.S);\nexports.Attribute = regex(_templateObject9(), exports.Name, exports.Eq, exports.Reference, exports.Reference); // -- Elements -----------------------------------------------------------------\n\nexports.CDSect = regex(_templateObject10(), exports.Char);\nexports.EmptyElemTag = regex(_templateObject11(), exports.Name, exports.S, exports.Attribute, exports.S);\nexports.ETag = regex(_templateObject12(), exports.Name, exports.S);\nexports.STag = regex(_templateObject13(), exports.Name, exports.S, exports.Attribute, exports.S); // -- Misc ---------------------------------------------------------------------\n// Special pattern that matches an entire string consisting only of `Char`\n// characters.\n\nexports.CharOnly = regex(_templateObject14(), exports.Char);\nexports.Comment = regex(_templateObject15(), exports.Char, exports.Char); // Loose implementation since doctype declarations are discarded.\n//\n// It's not possible to fully parse a doctype declaration with a regex, but\n// since we just discard them we can skip parsing the fiddly inner bits and use\n// a regex to speed things up.\n\nexports.doctypedecl = regex(_templateObject16(), exports.S, exports.S); // Loose implementation since processing instructions are discarded.\n\nexports.PI = regex(_templateObject17(), exports.Name, exports.S, exports.Char); // Loose implementation since XML declarations are discarded.\n\nexports.XMLDecl = regex(_templateObject18(), exports.S); // -- Helpers ------------------------------------------------------------------\n\nexports.Anchored = {};\nexports.Global = {}; // Create anchored and global variations of each pattern.\n\nObject.keys(exports).forEach(function (name) {\n  if (name !== 'Anchored' && name !== 'CharOnly' && name !== 'Global') {\n    var pattern = exports[name];\n    exports.Anchored[name] = new RegExp('^' + pattern.source);\n    exports.Global[name] = new RegExp(pattern.source, 'g');\n  }\n});\n\nfunction regex(strings) {\n  var length = strings.length,\n      raw = strings.raw;\n  var lastIndex = length - 1;\n  var pattern = '';\n\n  for (var _len = arguments.length, embeddedPatterns = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    embeddedPatterns[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < length; ++i) {\n    pattern += raw[i].replace(/(^|[^\\\\])\\/\\/.*$/gm, '$1') // remove end-of-line comments\n    .replace(/\\s+/g, ''); // remove all whitespace\n\n    if (i < lastIndex) {\n      pattern += embeddedPatterns[i].source;\n    }\n  }\n\n  return new RegExp(pattern);\n}","import { Fragment, createElement } from 'react'\n\nimport { parse } from '../../../utilities/xml'\n\nexport default ({ map = {}, xml }) => {\n  const hydrate = (nodes = []) => nodes\n    .map((node, index) => {\n      switch (node.type) {\n        case 'element':\n          const content = hydrate(node.children)\n          const match = map[node.name]\n          const attributes = match ? node.attributes : {}\n\n          return createElement(match || Fragment, { ...attributes, key: index }, content)\n\n        case 'text':\n          return node.text\n\n        default:\n          return false\n      }\n    })\n    .filter(c => !!c)\n\n  return hydrate(parse(`<root>${xml}</root>`).children)\n}\n","import React from 'react'\n\nimport Render from '../code/render'\nimport DotnetReference from '../references/dotnet'\n\nexport default ({ xml }) =>\n  <Render xml={xml} map={{\n    'see': ({ cref }) => <DotnetReference id={cref} />\n  }} />\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","var $export = require('./_export');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","'use strict';\n\nrequire(\"core-js/modules/es6.string.from-code-point\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.string.repeat\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.freeze\");\n\nvar emptyArray = Object.freeze([]);\nvar emptyObject = Object.freeze(Object.create(null));\nvar namedEntities = Object.freeze({\n  '&amp;': '&',\n  '&apos;': \"'\",\n  '&gt;': '>',\n  '&lt;': '<',\n  '&quot;': '\"'\n});\nvar NODE_TYPE_CDATA = 'cdata';\nvar NODE_TYPE_COMMENT = 'comment';\nvar NODE_TYPE_DOCUMENT = 'document';\nvar NODE_TYPE_ELEMENT = 'element';\nvar NODE_TYPE_TEXT = 'text';\nvar Syntax;\n\nmodule.exports = function parseXml(xml, options) {\n  if (options === void 0) {\n    options = emptyObject;\n  }\n\n  if (Syntax === void 0) {\n    // Lazy require to defer regex parsing until first use.\n    Syntax = require('./lib/syntax');\n  }\n\n  if (xml[0] === \"\\uFEFF\") {\n    // Strip byte order mark.\n    xml = xml.slice(1);\n  }\n\n  xml = xml.replace(/\\r\\n?/g, '\\n'); // Normalize CRLF and CR to LF.\n\n  var doc = {\n    type: NODE_TYPE_DOCUMENT,\n    children: [],\n    parent: null,\n    toJSON: nodeToJson\n  };\n  var state = {\n    length: xml.length,\n    options: options,\n    parent: doc,\n    pos: 0,\n    prevPos: 0,\n    slice: null,\n    xml: xml\n  };\n  state.replaceReference = replaceReference.bind(state);\n  consumeProlog(state);\n\n  if (!consumeElement(state)) {\n    error(state, 'Root element is missing or invalid');\n  }\n\n  while (consumeMisc(state)) {}\n\n  if (!isEof(state)) {\n    error(state, \"Extra content at the end of the document\");\n  }\n\n  return doc;\n}; // -- Private Functions --------------------------------------------------------\n\n\nfunction addNode(state, node) {\n  node.parent = state.parent;\n  node.toJSON = nodeToJson;\n  state.parent.children.push(node);\n}\n\nfunction addText(state, text) {\n  var children = state.parent.children;\n  var prevNode = children[children.length - 1];\n\n  if (prevNode !== void 0 && prevNode.type === NODE_TYPE_TEXT) {\n    // The previous node is a text node, so we can append to it and avoid\n    // creating another node.\n    prevNode.text += text;\n  } else {\n    addNode(state, {\n      type: NODE_TYPE_TEXT,\n      text: text\n    });\n  }\n} // Each `consume*` function takes the current state as an argument and returns\n// `true` if `state.pos` was advanced (meaning some XML was consumed) or `false`\n// if nothing was consumed.\n\n\nfunction consumeCDSect(state) {\n  var _scan = scan(state, Syntax.Anchored.CDSect),\n      match = _scan[0],\n      text = _scan[1];\n\n  if (match === void 0) {\n    return false;\n  }\n\n  if (state.options.preserveCdata) {\n    addNode(state, {\n      type: NODE_TYPE_CDATA,\n      text: text\n    });\n  } else {\n    addText(state, text);\n  }\n\n  return true;\n}\n\nfunction consumeCharData(state) {\n  var _scan2 = scan(state, Syntax.Anchored.CharData),\n      text = _scan2[0];\n\n  if (text === void 0) {\n    return false;\n  }\n\n  var cdataCloseIndex = text.indexOf(']]>');\n\n  if (cdataCloseIndex !== -1) {\n    state.pos = state.prevPos + cdataCloseIndex;\n    error(state, 'Element content may not contain the CDATA section close delimiter `]]>`');\n  } // Note: XML 1.0 5th ed. says `CharData` is \"any string of characters which\n  // does not contain the start-delimiter of any markup and does not include the\n  // CDATA-section-close delimiter\", but the conformance test suite and\n  // well-established parsers like libxml seem to restrict `CharData` to\n  // characters that match the `Char` symbol, so that's what I've done here.\n\n\n  if (!Syntax.CharOnly.test(text)) {\n    state.pos = state.prevPos + text.search(new RegExp(\"(?!\" + Syntax.Char.source + \")\"));\n    error(state, 'Element content contains an invalid character');\n  }\n\n  addText(state, text);\n  return true;\n}\n\nfunction consumeComment(state) {\n  var _scan3 = scan(state, Syntax.Anchored.Comment),\n      content = _scan3[1];\n\n  if (content === void 0) {\n    return false;\n  }\n\n  if (state.options.preserveComments) {\n    addNode(state, {\n      type: NODE_TYPE_COMMENT,\n      content: content.trim()\n    });\n  }\n\n  return true;\n}\n\nfunction consumeDoctypeDecl(state) {\n  return scan(state, Syntax.Anchored.doctypedecl).length > 0;\n}\n\nfunction consumeElement(state) {\n  var _scan4 = scan(state, Syntax.Anchored.EmptyElemTag),\n      tag = _scan4[0],\n      name = _scan4[1],\n      attrs = _scan4[2];\n\n  var isEmpty = tag !== void 0;\n\n  if (!isEmpty) {\n    var _scan5 = scan(state, Syntax.Anchored.STag);\n\n    tag = _scan5[0];\n    name = _scan5[1];\n    attrs = _scan5[2];\n\n    if (tag === void 0) {\n      return false;\n    }\n  }\n\n  var parent = state.parent;\n  var parsedAttrs = parseAttrs(state, attrs);\n  var node = {\n    type: NODE_TYPE_ELEMENT,\n    name: name,\n    attributes: parsedAttrs,\n    children: []\n  };\n  var xmlSpace = parsedAttrs['xml:space'];\n\n  if (xmlSpace === 'preserve' || xmlSpace !== 'default' && parent.preserveWhitespace) {\n    node.preserveWhitespace = true;\n  }\n\n  if (!isEmpty) {\n    state.parent = node;\n    consumeCharData(state);\n\n    while (consumeElement(state) || consumeReference(state) || consumeCDSect(state) || consumePI(state) || consumeComment(state)) {\n      consumeCharData(state);\n    }\n\n    var _scan6 = scan(state, Syntax.Anchored.ETag),\n        endName = _scan6[1];\n\n    if (endName !== name) {\n      state.pos = state.prevPos;\n      error(state, \"Missing end tag for element \" + name);\n    }\n\n    state.parent = parent;\n  }\n\n  addNode(state, node);\n  return true;\n}\n\nfunction consumeMisc(state) {\n  return consumeComment(state) || consumePI(state) || consumeWhitespace(state);\n}\n\nfunction consumePI(state) {\n  var _scan7 = scan(state, Syntax.Anchored.PI),\n      match = _scan7[0],\n      target = _scan7[1];\n\n  if (match === void 0) {\n    return false;\n  }\n\n  if (target.toLowerCase() === 'xml') {\n    state.pos = state.prevPos;\n    error(state, 'XML declaration is only allowed at the start of the document');\n  }\n\n  return true;\n}\n\nfunction consumeProlog(state) {\n  var pos = state.pos;\n  scan(state, Syntax.Anchored.XMLDecl);\n\n  while (consumeMisc(state)) {}\n\n  if (consumeDoctypeDecl(state)) {\n    while (consumeMisc(state)) {}\n  }\n\n  return state.pos > pos;\n}\n\nfunction consumeReference(state) {\n  var _scan8 = scan(state, Syntax.Anchored.Reference),\n      ref = _scan8[0];\n\n  if (ref === void 0) {\n    return false;\n  }\n\n  addText(state, state.replaceReference(ref));\n  return true;\n}\n\nfunction consumeWhitespace(state) {\n  return scan(state, Syntax.Anchored.S).length > 0;\n}\n\nfunction error(state, message) {\n  var pos = state.pos,\n      xml = state.xml;\n  var column = 1;\n  var excerpt = '';\n  var line = 1; // Find the line and column where the error occurred.\n\n  for (var i = 0; i < pos; ++i) {\n    var _char = xml[i];\n\n    if (_char === '\\n') {\n      column = 1;\n      excerpt = '';\n      line += 1;\n    } else {\n      column += 1;\n      excerpt += _char;\n    }\n  }\n\n  var eol = xml.indexOf('\\n', pos);\n  excerpt += eol === -1 ? xml.slice(pos) : xml.slice(pos, eol);\n  var excerptStart = 0; // Keep the excerpt below 50 chars, but always keep the error position in\n  // view.\n\n  if (excerpt.length > 50) {\n    if (column < 40) {\n      excerpt = excerpt.slice(0, 50);\n    } else {\n      excerptStart = column - 20;\n      excerpt = excerpt.slice(excerptStart, column + 30);\n    }\n  }\n\n  var err = new Error(message + \" (line \" + line + \", column \" + column + \")\\n\" + (\"  \" + excerpt + \"\\n\") + ' '.repeat(column - excerptStart + 1) + '^\\n');\n  err.column = column;\n  err.excerpt = excerpt;\n  err.line = line;\n  err.pos = pos;\n  throw err;\n}\n\nfunction isEof(state) {\n  return state.pos >= state.length - 1;\n}\n\nfunction nodeToJson() {\n  var json = Object.assign(Object.create(null), this);\n  delete json.parent;\n  return json;\n}\n\nfunction normalizeAttrValue(state, value) {\n  return value.replace(Syntax.Global.Reference, state.replaceReference).replace(Syntax.Global.S, ' ').trim();\n}\n\nfunction parseAttrs(state, attrs) {\n  var parsedAttrs = Object.create(null);\n\n  if (!attrs) {\n    return parsedAttrs;\n  }\n\n  var attrPairs = attrs.match(Syntax.Global.Attribute).sort();\n\n  for (var i = 0, len = attrPairs.length; i < len; ++i) {\n    var attrPair = attrPairs[i];\n    var eqMatch = attrPair.match(Syntax.Eq);\n    var name = attrPair.slice(0, eqMatch.index);\n    var value = attrPair.slice(eqMatch.index + eqMatch[0].length);\n\n    if (name in parsedAttrs) {\n      state.pos = state.prevPos;\n      error(state, \"Attribute `\" + name + \"` redefined\");\n    }\n\n    value = normalizeAttrValue(state, value.slice(1, -1));\n\n    if (name === 'xml:space') {\n      if (value !== 'default' && value !== 'preserve') {\n        state.pos = state.prevPos;\n        error(state, \"Value of the `xml:space` attribute must be \\\"default\\\" or \\\"preserve\\\"\");\n      }\n    }\n\n    parsedAttrs[name] = value;\n  }\n\n  return parsedAttrs;\n}\n\nfunction replaceReference(ref) {\n  var state = this;\n\n  if (ref[1] === '#') {\n    // This is a character entity.\n    var codePoint;\n\n    if (ref[2] === 'x') {\n      codePoint = parseInt(ref.slice(3, -1), 16);\n    } else {\n      codePoint = parseInt(ref.slice(2, -1), 10);\n    }\n\n    if (isNaN(codePoint)) {\n      state.pos = state.prevPos;\n      error(state, \"Invalid character entity `\" + ref + \"`\");\n    }\n\n    var _char2 = String.fromCodePoint(codePoint);\n\n    if (!Syntax.Char.test(_char2)) {\n      state.pos = state.prevPos;\n      error(state, \"Invalid character entity `\" + ref + \"`\");\n    }\n\n    return _char2;\n  } // This is a named entity.\n\n\n  var value = namedEntities[ref];\n\n  if (value !== void 0) {\n    return value;\n  }\n\n  if (state.options.resolveUndefinedEntity) {\n    var resolvedValue = state.options.resolveUndefinedEntity(ref);\n\n    if (resolvedValue !== null && resolvedValue !== void 0) {\n      return resolvedValue;\n    }\n  }\n\n  if (state.options.ignoreUndefinedEntities) {\n    return ref;\n  }\n\n  state.pos = state.prevPos;\n  error(state, \"Named entity isn't defined: `\" + ref + \"`\");\n}\n\nfunction scan(state, regex) {\n  var pos = state.pos,\n      slice = state.slice,\n      xml = state.xml;\n\n  if (slice === null) {\n    if (pos > 0) {\n      slice = xml.slice(pos);\n      state.slice = slice;\n    } else {\n      slice = xml;\n    }\n  }\n\n  var matches = slice.match(regex);\n\n  if (matches === null) {\n    return emptyArray;\n  }\n\n  state.prevPos = state.pos;\n  state.pos += matches[0].length;\n  state.slice = null;\n  return matches;\n}","import React from 'react'\n\nimport styles from './breadcrumb.module.scss'\n\nexport default ({ children, ...others }) => {\n  if (!children) {\n    return\n  }\n\n  if (!Array.isArray(children)) {\n    children = [children]\n  }\n\n  return (\n    <ul className={styles.breadcrumb} {...others}>\n      {children.map((child, index) =>\n        <li key={index}>{child}</li>\n      )}\n    </ul>\n  )\n}\n","const parse = require('@rgrove/parse-xml')\n\n/**\n * Gets the XML representation of a node.\n *\n * @param {object} node\n * A node to render markup for. If the node has children, they will be visited\n * recursively.\n *\n * @param {boolean} [include]\n * Whether to include the root node.\n *\n * @returns {string}\n * The XML representation of the node.\n */\nfunction getMarkup (node, include = false) {\n  switch (node.type) {\n    case 'document':\n      return node.children.map(getMarkup).join('')\n\n    case 'element':\n      const content = node.children\n        .map(c => getMarkup(c, true))\n        .join('')\n\n      if (!include) {\n        return content.trim()\n      }\n\n      const name = node.name\n      const attributes = Object.keys(node.attributes)\n        .map(k => ` ${k}=\"${node.attributes[k].replace(/\"/, '&#34;')}\"`)\n        .join('')\n\n      return `<${name}${attributes}` + (content.length > 0 ? `>${content}</${name}>` : ` />`)\n\n    case 'text':\n      return node.text\n\n    default:\n      return ''\n  }\n}\n\n/**\n * Gets the inner text of an XML node.\n *\n * @param {object} node\n * A node to extract text from. If the node has children, they will be visited\n * recursively.\n *\n * @returns {string}\n * The inner text of the node with leading and trailing whitespace removed and\n * all other whitespace compacted.\n */\nfunction getText (node) {\n  switch (node.type) {\n    case 'document':\n    case 'element':\n      return node.children.map(getText).join('')\n\n    case 'text':\n      return node.text.replace(/\\s+/, ' ').trim()\n\n    default:\n      return ''\n  }\n}\n\nmodule.exports = {\n  getMarkup,\n  getText,\n  parse\n}\n"],"sourceRoot":""}