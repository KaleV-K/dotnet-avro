{"componentChunkName":"component---src-templates-dotnet-type-js","path":"/api/chr.avro.confluent.asyncschemaregistryserializer-1","webpackCompilationHash":"a589ddd3f17a79f5d450","result":{"data":{"dotnetType":{"base":"T:System.Object","kind":"class","interfaces":["T:Confluent.Kafka.IAsyncSerializer{`0}"],"name":"AsyncSchemaRegistrySerializer<T>","remarks":"By default, when serializing keys for a topic with name \"test_topic\", this deserializer\n            would query the Schema Registry for subject \"test_topic-key\". (This is a Confluent\n            conventionâ€”values would be \"test_topic-value\".)","summary":"An <see cref=\"T:Confluent.Kafka.IAsyncSerializer`1\" /> that resolves Avro schemas on the fly. When serializing\n            messages, this serializer will attempt to look up a subject that matches the topic name (if\n            not already cached).","assembly":{"id":"A:Chr.Avro.Confluent"},"members":[{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor","kind":"constructor","name":"#ctor","overloads":[{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,System.Boolean,Chr.Avro.Abstract.ISchemaBuilder,Chr.Avro.Representation.IJsonSchemaReader,Chr.Avro.Representation.IJsonSchemaWriter,Chr.Avro.Serialization.IBinarySerializerBuilder,System.Func{Confluent.Kafka.SerializationContext,System.String})","returns":null,"summary":"Creates a serializer.","typeParameters":null},{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}},System.Boolean,Chr.Avro.Abstract.ISchemaBuilder,Chr.Avro.Representation.IJsonSchemaReader,Chr.Avro.Representation.IJsonSchemaWriter,Chr.Avro.Serialization.IBinarySerializerBuilder,System.Func{Confluent.Kafka.SerializationContext,System.String})","returns":null,"summary":"Creates a serializer.","typeParameters":null}]},{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SerializeAsync","kind":"method","name":"SerializeAsync","overloads":[{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SerializeAsync(`0,Confluent.Kafka.SerializationContext)","returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{System.Byte[]}"},"summary":"Serialize a message. (See <see cref=\"M:Confluent.Kafka.IAsyncSerializer`1.SerializeAsync(`0,Confluent.Kafka.SerializationContext)\" />.)","typeParameters":null}]}],"namespace":{"id":"N:Chr.Avro.Confluent","name":"Chr.Avro.Confluent"},"typeParameters":[{"name":"T"}],"typeSignatures":[{"language":"C#","value":"public class AsyncSchemaRegistrySerializer<T> : Confluent.Kafka.IAsyncSerializer<T>"},{"language":"ILAsm","value":".class public auto ansi beforefieldinit AsyncSchemaRegistrySerializer`1<T> extends System.Object implements class Confluent.Kafka.IAsyncSerializer`1<!T>"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"T:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1"}}}