{"componentChunkName":"component---src-templates-dotnet-member-js","path":"/api/chr.avro.confluent.producerbuilderextensions.setavrovalueserializer-2","webpackCompilationHash":"4a961bdfd907864ab2e5","result":{"data":{"dotnetMember":{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2","kind":"method","name":"SetAvroValueSerializer<TKey,TValue>","overloads":[{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},Chr.Avro.Confluent.SchemaRegistrySerializerBuilder,System.Int32)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, Chr.Avro.Confluent.SchemaRegistrySerializerBuilder serializerBuilder, int id);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class Chr.Avro.Confluent.SchemaRegistrySerializerBuilder serializerBuilder, int32 id) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"serializerBuilder","summary":"A serializer builder.","type":"T:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder"},{"name":"id","summary":"The ID of the schema that should be used to serialize values.","type":"T:System.Int32"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},Confluent.SchemaRegistry.ISchemaRegistryClient,System.Int32)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, int id);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, int32 id) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"registryClient","summary":"A client to use to resolve the schema. (The client will not be disposed.)","type":"T:Confluent.SchemaRegistry.ISchemaRegistryClient"},{"name":"id","summary":"The ID of the schema that should be used to serialize values.","type":"T:System.Int32"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}},System.Int32)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> registryConfiguration, int id);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class System.Collections.Generic.IEnumerable`1<valuetype System.Collections.Generic.KeyValuePair`2<string, string>> registryConfiguration, int32 id) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"registryConfiguration","summary":"Schema Registry configuration. Using the <see cref=\"T:Confluent.SchemaRegistry.SchemaRegistryConfig\" /> class is\n            highly recommended.","type":"T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}}"},{"name":"id","summary":"The ID of the schema that should be used to serialize values.","type":"T:System.Int32"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},Chr.Avro.Confluent.SchemaRegistrySerializerBuilder,System.String,System.Boolean)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, Chr.Avro.Confluent.SchemaRegistrySerializerBuilder serializerBuilder, string subject, bool registerAutomatically = false);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class Chr.Avro.Confluent.SchemaRegistrySerializerBuilder serializerBuilder, string subject, bool registerAutomatically) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"serializerBuilder","summary":"A serializer builder.","type":"T:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder"},{"name":"subject","summary":"The subject of the schema that should be used to serialize values. The latest version\n            of the subject will be resolved.","type":"T:System.String"},{"name":"registerAutomatically","summary":"Whether to automatically register a schema that matches <typeparamref name=\"TValue\" />\n            if one does not already exist.","type":"T:System.Boolean"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},Chr.Avro.Confluent.SchemaRegistrySerializerBuilder,System.String,System.Int32)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, Chr.Avro.Confluent.SchemaRegistrySerializerBuilder serializerBuilder, string subject, int version);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class Chr.Avro.Confluent.SchemaRegistrySerializerBuilder serializerBuilder, string subject, int32 version) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"serializerBuilder","summary":"A serializer builder.","type":"T:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder"},{"name":"subject","summary":"The subject of the schema that should be used to serialize values.","type":"T:System.String"},{"name":"version","summary":"The version of the subject to be resolved.","type":"T:System.Int32"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},Confluent.SchemaRegistry.ISchemaRegistryClient,System.Boolean,System.Func{Confluent.Kafka.SerializationContext,System.String})","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static Confluent.Kafka.ProducerBuilder<TKey,TValue> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, bool registerAutomatically = false, Func<Confluent.Kafka.SerializationContext,string> subjectNameBuilder = null);"},{"language":"ILAsm","value":".method public static hidebysig class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, bool registerAutomatically, class System.Func`2<valuetype Confluent.Kafka.SerializationContext, string> subjectNameBuilder) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"registryClient","summary":"A client to use for Schema Registry operations. The client should only be disposed\n            after the producer; the serializer will use it to request schemas as messages are being\n            produced.","type":"T:Confluent.SchemaRegistry.ISchemaRegistryClient"},{"name":"registerAutomatically","summary":"Whether to automatically register schemas that match the type being serialized.","type":"T:System.Boolean"},{"name":"subjectNameBuilder","summary":"A function that determines the subject name given the topic name and a component type\n            (key or value). If none is provided, the default \"{topic name}-{component}\" naming\n            convention will be used.","type":"T:System.Func{Confluent.Kafka.SerializationContext,System.String}"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},Confluent.SchemaRegistry.ISchemaRegistryClient,System.String,System.Boolean)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, string subject, bool registerAutomatically = false);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, string subject, bool registerAutomatically) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"registryClient","summary":"A client to use to resolve the schema. (The client will not be disposed.)","type":"T:Confluent.SchemaRegistry.ISchemaRegistryClient"},{"name":"subject","summary":"The subject of the schema that should be used to serialize values. The latest version\n            of the subject will be resolved.","type":"T:System.String"},{"name":"registerAutomatically","summary":"Whether to automatically register a schema that matches <typeparamref name=\"TValue\" />\n            if one does not already exist.","type":"T:System.Boolean"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},Confluent.SchemaRegistry.ISchemaRegistryClient,System.String,System.Int32)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, string subject, int version);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, string subject, int32 version) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"registryClient","summary":"A client to use to resolve the schema. (The client will not be disposed.)","type":"T:Confluent.SchemaRegistry.ISchemaRegistryClient"},{"name":"subject","summary":"The subject of the schema that should be used to serialize values.","type":"T:System.String"},{"name":"version","summary":"The version of the subject to be resolved.","type":"T:System.Int32"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}},System.Boolean,System.Func{Confluent.Kafka.SerializationContext,System.String})","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static Confluent.Kafka.ProducerBuilder<TKey,TValue> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> registryConfiguration, bool registerAutomatically = false, Func<Confluent.Kafka.SerializationContext,string> subjectNameBuilder = null);"},{"language":"ILAsm","value":".method public static hidebysig class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class System.Collections.Generic.IEnumerable`1<valuetype System.Collections.Generic.KeyValuePair`2<string, string>> registryConfiguration, bool registerAutomatically, class System.Func`2<valuetype Confluent.Kafka.SerializationContext, string> subjectNameBuilder) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"registryConfiguration","summary":"Schema Registry configuration. Using the <see cref=\"T:Confluent.SchemaRegistry.SchemaRegistryConfig\" /> class is\n            highly recommended.","type":"T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}}"},{"name":"registerAutomatically","summary":"Whether to automatically register schemas that match the type being serialized.","type":"T:System.Boolean"},{"name":"subjectNameBuilder","summary":"A function that determines the subject name given the topic name and a component type\n            (key or value). If none is provided, the default \"{topic name}-{component}\" naming\n            convention will be used.","type":"T:System.Func{Confluent.Kafka.SerializationContext,System.String}"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}},System.String,System.Boolean)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> registryConfiguration, string subject, bool registerAutomatically = false);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class System.Collections.Generic.IEnumerable`1<valuetype System.Collections.Generic.KeyValuePair`2<string, string>> registryConfiguration, string subject, bool registerAutomatically) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"registryConfiguration","summary":"Schema Registry configuration. Using the <see cref=\"T:Confluent.SchemaRegistry.SchemaRegistryConfig\" /> class is\n            highly recommended.","type":"T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}}"},{"name":"subject","summary":"The subject of the schema that should be used to serialize values. The latest version\n            of the subject will be resolved.","type":"T:System.String"},{"name":"registerAutomatically","summary":"Whether to automatically register a schema that matches <typeparamref name=\"TValue\" />\n            if one does not already exist.","type":"T:System.Boolean"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2(Confluent.Kafka.ProducerBuilder{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}},System.String,System.Int32)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Threading.Tasks.Task<Confluent.Kafka.ProducerBuilder<TKey,TValue>> SetAvroValueSerializer<TKey,TValue> (this Confluent.Kafka.ProducerBuilder<TKey,TValue> producerBuilder, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> registryConfiguration, string subject, int version);"},{"language":"ILAsm","value":".method public static hidebysig class System.Threading.Tasks.Task`1<class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue>> SetAvroValueSerializer<TKey, TValue>(class Confluent.Kafka.ProducerBuilder`2<!!TKey, !!TValue> producerBuilder, class System.Collections.Generic.IEnumerable`1<valuetype System.Collections.Generic.KeyValuePair`2<string, string>> registryConfiguration, string subject, int32 version) cil managed"}],"parameters":[{"name":"producerBuilder","summary":"The <see cref=\"T:Confluent.Kafka.ProducerBuilder`2\" /> instance to be configured.","type":"T:Confluent.Kafka.ProducerBuilder{``0,``1}"},{"name":"registryConfiguration","summary":"Schema Registry configuration. Using the <see cref=\"T:Confluent.SchemaRegistry.SchemaRegistryConfig\" /> class is\n            highly recommended.","type":"T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}}"},{"name":"subject","summary":"The subject of the schema that should be used to serialize values.","type":"T:System.String"},{"name":"version","summary":"The version of the subject to be resolved.","type":"T:System.Int32"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ProducerBuilder{``0,``1}}"},"summary":"Set the message value serializer.","typeParameters":[{"name":"TKey","summary":"To be added."},{"name":"TValue","summary":"To be added."}]}],"type":{"id":"T:Chr.Avro.Confluent.ProducerBuilderExtensions","kind":"class","name":"ProducerBuilderExtensions","namespace":{"id":"N:Chr.Avro.Confluent","name":"Chr.Avro.Confluent"},"typeParameters":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"M:Chr.Avro.Confluent.ProducerBuilderExtensions.SetAvroValueSerializer``2"}}}