{"componentChunkName":"component---src-templates-dotnet-member-js","path":"/api/chr.avro.confluent.schemaregistrydeserializerbuilder.build-1","result":{"data":{"dotnetMember":{"id":"M:Chr.Avro.Confluent.SchemaRegistryDeserializerBuilder.Build``1","kind":"method","name":"Build<T>","overloads":[{"id":"M:Chr.Avro.Confluent.SchemaRegistryDeserializerBuilder.Build``1(System.Int32)","base":null,"exceptions":[{"summary":"Thrown when the type is incompatible with the retrieved schema.","type":"T:System.AggregateException"}],"memberSignatures":[{"language":"C#","value":"public virtual System.Threading.Tasks.Task<Confluent.Kafka.IDeserializer<T>> Build<T> (int id);"},{"language":"ILAsm","value":".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1<class Confluent.Kafka.IDeserializer`1<!!T>> Build<T>(int32 id) cil managed"}],"parameters":[{"name":"id","summary":"The ID of the schema that should be used to deserialize data.","type":"T:System.Int32"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.IDeserializer{``0}}"},"summary":"Builds a deserializer for a specific schema.","typeParameters":[{"name":"T","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.SchemaRegistryDeserializerBuilder.Build``1(System.String)","base":null,"exceptions":[{"summary":"Thrown when the type is incompatible with the retrieved schema.","type":"T:System.AggregateException"}],"memberSignatures":[{"language":"C#","value":"public virtual System.Threading.Tasks.Task<Confluent.Kafka.IDeserializer<T>> Build<T> (string subject);"},{"language":"ILAsm","value":".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1<class Confluent.Kafka.IDeserializer`1<!!T>> Build<T>(string subject) cil managed"}],"parameters":[{"name":"subject","summary":"The subject of the schema that should be used to deserialize data. The latest version\n            of the subject will be resolved.","type":"T:System.String"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.IDeserializer{``0}}"},"summary":"Builds a deserializer for a specific schema.","typeParameters":[{"name":"T","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.SchemaRegistryDeserializerBuilder.Build``1(System.Int32,System.String)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"protected virtual Confluent.Kafka.IDeserializer<T> Build<T> (int id, string schema);"},{"language":"ILAsm","value":".method familyhidebysig newslot virtual instance class Confluent.Kafka.IDeserializer`1<!!T> Build<T>(int32 id, string schema) cil managed"}],"parameters":[{"name":"id","summary":"A schema ID that all payloads must be serialized with. If a received schema ID does not\n            match this ID, <see cref=\"T:System.IO.InvalidDataException\" /> will be thrown.","type":"T:System.Int32"},{"name":"schema","summary":"The schema to build the Avro deserializer from.","type":"T:System.String"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:Confluent.Kafka.IDeserializer{``0}"},"summary":"Builds a deserializer for the Confluent wire format.","typeParameters":[{"name":"T","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.SchemaRegistryDeserializerBuilder.Build``1(System.String,System.Int32)","base":null,"exceptions":[{"summary":"Thrown when the type is incompatible with the retrieved schema.","type":"T:System.AggregateException"}],"memberSignatures":[{"language":"C#","value":"public virtual System.Threading.Tasks.Task<Confluent.Kafka.IDeserializer<T>> Build<T> (string subject, int version);"},{"language":"ILAsm","value":".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1<class Confluent.Kafka.IDeserializer`1<!!T>> Build<T>(string subject, int32 version) cil managed"}],"parameters":[{"name":"subject","summary":"The subject of the schema that should be used to deserialize data.","type":"T:System.String"},{"name":"version","summary":"The version of the subject to be resolved.","type":"T:System.Int32"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.IDeserializer{``0}}"},"summary":"Builds a deserializer for a specific schema.","typeParameters":[{"name":"T","summary":"To be added."}]}],"type":{"id":"T:Chr.Avro.Confluent.SchemaRegistryDeserializerBuilder","kind":"class","name":"SchemaRegistryDeserializerBuilder","namespace":{"id":"N:Chr.Avro.Confluent","name":"Chr.Avro.Confluent"},"typeParameters":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"M:Chr.Avro.Confluent.SchemaRegistryDeserializerBuilder.Build``1"}}}