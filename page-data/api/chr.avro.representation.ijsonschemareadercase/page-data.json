{"componentChunkName":"component---src-templates-dotnet-type-js","path":"/api/chr.avro.representation.ijsonschemareadercase","webpackCompilationHash":"c59cdd7f5975766cb9b3","result":{"data":{"dotnetType":{"base":null,"kind":"interface","interfaces":[],"name":"IJsonSchemaReaderCase","remarks":null,"summary":"Reads Avro schemas from specific JSON tokens. Used by <see cref=\"T:Chr.Avro.Representation.JsonSchemaReader\" /> to\n            break apart read logic.","assembly":{"id":"A:Chr.Avro.Json"},"members":[{"id":"M:Chr.Avro.Representation.IJsonSchemaReaderCase.IsMatch","kind":"method","name":"IsMatch","overloads":[{"id":"M:Chr.Avro.Representation.IJsonSchemaReaderCase.IsMatch(Newtonsoft.Json.Linq.JToken)","returns":{"summary":"To be added.","type":"T:System.Boolean"},"summary":"Determines whether the case can be applied to a token.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.IJsonSchemaReaderCase.Read","kind":"method","name":"Read","overloads":[{"id":"M:Chr.Avro.Representation.IJsonSchemaReaderCase.Read(Newtonsoft.Json.Linq.JToken,System.Collections.Concurrent.ConcurrentDictionary{System.String,Chr.Avro.Abstract.Schema},System.String)","returns":{"summary":"To be added.","type":"T:Chr.Avro.Abstract.Schema"},"summary":"Reads a schema from a JSON token.","typeParameters":null}]}],"namespace":{"id":"N:Chr.Avro.Representation","name":"Chr.Avro.Representation"},"typeParameters":null,"typeSignatures":[{"language":"C#","value":"public interface IJsonSchemaReaderCase"},{"language":"ILAsm","value":".class public interface auto ansi abstract IJsonSchemaReaderCase"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"T:Chr.Avro.Representation.IJsonSchemaReaderCase"}}}