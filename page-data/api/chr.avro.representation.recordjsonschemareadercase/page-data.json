{"componentChunkName":"component---src-templates-dotnet-type-js","path":"/api/chr.avro.representation.recordjsonschemareadercase","webpackCompilationHash":"a589ddd3f17a79f5d450","result":{"data":{"dotnetType":{"base":"T:Chr.Avro.Representation.NamedJsonSchemaReaderCase","kind":"class","interfaces":[],"name":"RecordJsonSchemaReaderCase","remarks":null,"summary":"A JSON schema reader case that matches record schemas.","assembly":{"id":"A:Chr.Avro.Json"},"members":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.#ctor","kind":"constructor","name":"#ctor","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.#ctor(Chr.Avro.Representation.INewtonsoftJsonSchemaReader)","returns":null,"summary":"Creates a new record case.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetDoc","kind":"method","name":"GetDoc","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetDoc(Newtonsoft.Json.Linq.JToken)","returns":{"summary":"To be added.","type":"T:System.String"},"summary":"Extracts the documentation field from a record schema.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetFields","kind":"method","name":"GetFields","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetFields(Newtonsoft.Json.Linq.JObject)","returns":{"summary":"To be added.","type":"T:Newtonsoft.Json.Linq.JArray"},"summary":"Extracts the fields from a record schema.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetName","kind":"method","name":"GetName","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetName(Newtonsoft.Json.Linq.JObject)","returns":{"summary":"To be added.","type":"T:System.String"},"summary":"Extracts the name from a record field.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetType","kind":"method","name":"GetType","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetType(Newtonsoft.Json.Linq.JObject)","returns":{"summary":"To be added.","type":"T:Newtonsoft.Json.Linq.JToken"},"summary":"Extracts the type from a record field.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.IsMatch","kind":"method","name":"IsMatch","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.IsMatch(Newtonsoft.Json.Linq.JToken)","returns":{"summary":"To be added.","type":"T:System.Boolean"},"summary":"Determines whether the case can be applied to a token.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.Read","kind":"method","name":"Read","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.Read(Newtonsoft.Json.Linq.JToken,System.Collections.Concurrent.ConcurrentDictionary{System.String,Chr.Avro.Abstract.Schema},System.String)","returns":{"summary":"To be added.","type":"T:Chr.Avro.Abstract.Schema"},"summary":"Reads a schema from a JSON token.","typeParameters":null}]},{"id":"F:Chr.Avro.Representation.RecordJsonSchemaReaderCase.Reader","kind":"field","name":"Reader","overloads":[{"id":"F:Chr.Avro.Representation.RecordJsonSchemaReaderCase.Reader","returns":{"summary":null,"type":"T:Chr.Avro.Representation.INewtonsoftJsonSchemaReader"},"summary":"A schema reader to use to resolve field types.","typeParameters":null}]}],"namespace":{"id":"N:Chr.Avro.Representation","name":"Chr.Avro.Representation"},"typeParameters":null,"typeSignatures":[{"language":"C#","value":"public class RecordJsonSchemaReaderCase : Chr.Avro.Representation.NamedJsonSchemaReaderCase"},{"language":"ILAsm","value":".class public auto ansi beforefieldinit RecordJsonSchemaReaderCase extends Chr.Avro.Representation.NamedJsonSchemaReaderCase"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"T:Chr.Avro.Representation.RecordJsonSchemaReaderCase"}}}