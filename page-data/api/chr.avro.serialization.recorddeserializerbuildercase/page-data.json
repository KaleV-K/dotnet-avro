{"componentChunkName":"component---src-templates-dotnet-type-js","path":"/api/chr.avro.serialization.recorddeserializerbuildercase","webpackCompilationHash":"a589ddd3f17a79f5d450","result":{"data":{"dotnetType":{"base":"T:Chr.Avro.Serialization.BinaryDeserializerBuilderCase","kind":"class","interfaces":[],"name":"RecordDeserializerBuilderCase","remarks":null,"summary":"A deserializer builder case that matches <see cref=\"T:Chr.Avro.Abstract.RecordSchema\" /> and attempts to map\n            it to classes or structs.","assembly":{"id":"A:Chr.Avro.Binary"},"members":[{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.#ctor","kind":"constructor","name":"#ctor","overloads":[{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.#ctor(Chr.Avro.Serialization.IBinaryDeserializerBuilder)","returns":null,"summary":"Creates a new record deserializer builder case.","typeParameters":null}]},{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.BuildDelegate","kind":"method","name":"BuildDelegate","overloads":[{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.BuildDelegate(Chr.Avro.Resolution.TypeResolution,Chr.Avro.Abstract.Schema,System.Collections.Generic.IDictionary{System.ValueTuple{System.Type,Chr.Avro.Abstract.Schema},System.Delegate})","returns":{"summary":"A function that accepts a <see cref=\"T:System.IO.Stream\" /> and returns a deserialized object.","type":"T:System.Delegate"},"summary":"Builds a record deserializer for a type-schema pair.","typeParameters":null}]},{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.CreateSurrogateType","kind":"method","name":"CreateSurrogateType","overloads":[{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.CreateSurrogateType(Chr.Avro.Abstract.Schema)","returns":{"summary":"<see cref=\"T:System.Collections.Generic.IEnumerable`1\" /> if the schema is an array schema (or a union schema\n            containing only array/null schemas), <see cref=\"T:System.Collections.Generic.IDictionary`2\" /> if the\n            schema is a map schema (or a union schema containing only map/null schemas), and\n            <see cref=\"T:System.Object\" /> otherwise.","type":"T:System.Type"},"summary":"Creates a type that can be used to deserialize missing record fields.","typeParameters":null}]},{"id":"F:Chr.Avro.Serialization.RecordDeserializerBuilderCase.DeserializerBuilder","kind":"field","name":"DeserializerBuilder","overloads":[{"id":"F:Chr.Avro.Serialization.RecordDeserializerBuilderCase.DeserializerBuilder","returns":{"summary":null,"type":"T:Chr.Avro.Serialization.IBinaryDeserializerBuilder"},"summary":"The deserializer builder to use to build field deserializers.","typeParameters":null}]},{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.IsMatch","kind":"method","name":"IsMatch","overloads":[{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.IsMatch(Chr.Avro.Abstract.Schema)","returns":{"summary":"Whether the schema is a <see cref=\"T:Chr.Avro.Abstract.RecordSchema\" />.","type":"T:System.Boolean"},"summary":"Determines whether the case can be applied to a schema.","typeParameters":null},{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.IsMatch(Chr.Avro.Resolution.TypeResolution)","returns":{"summary":"Whether the resolution is a <see cref=\"T:Chr.Avro.Resolution.RecordResolution\" />.","type":"T:System.Boolean"},"summary":"Determines whether the case can be applied to a type resolution.","typeParameters":null}]}],"namespace":{"id":"N:Chr.Avro.Serialization","name":"Chr.Avro.Serialization"},"typeParameters":null,"typeSignatures":[{"language":"C#","value":"public class RecordDeserializerBuilderCase : Chr.Avro.Serialization.BinaryDeserializerBuilderCase"},{"language":"ILAsm","value":".class public auto ansi beforefieldinit RecordDeserializerBuilderCase extends Chr.Avro.Serialization.BinaryDeserializerBuilderCase"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"T:Chr.Avro.Serialization.RecordDeserializerBuilderCase"}}}