{"componentChunkName":"component---src-templates-dotnet-type-js","path":"/api/chr.avro.serialization.unionserializerbuildercase","result":{"data":{"dotnetType":{"base":"T:Chr.Avro.Serialization.BinarySerializerBuilderCase","kind":"class","interfaces":[],"name":"UnionSerializerBuilderCase","remarks":null,"summary":"A serializer builder case that matches <see cref=\"T:Chr.Avro.Abstract.UnionSchema\" /> and attempts to map it to\n            any provided type.","assembly":{"id":"A:Chr.Avro.Binary"},"members":[{"id":"M:Chr.Avro.Serialization.UnionSerializerBuilderCase.#ctor","kind":"constructor","name":"#ctor","overloads":[{"id":"M:Chr.Avro.Serialization.UnionSerializerBuilderCase.#ctor(Chr.Avro.Serialization.IBinaryCodec,Chr.Avro.Serialization.IBinarySerializerBuilder)","returns":null,"summary":"Creates a new union serializer builder case.","typeParameters":null}]},{"id":"M:Chr.Avro.Serialization.UnionSerializerBuilderCase.BuildDelegate","kind":"method","name":"BuildDelegate","overloads":[{"id":"M:Chr.Avro.Serialization.UnionSerializerBuilderCase.BuildDelegate(Chr.Avro.Resolution.TypeResolution,Chr.Avro.Abstract.Schema,System.Collections.Concurrent.ConcurrentDictionary{System.ValueTuple{System.Type,Chr.Avro.Abstract.Schema},System.Delegate})","returns":{"summary":"An action that accepts an object and a <see cref=\"T:System.IO.Stream\" /> and writes the serialized\n            object to the stream.","type":"T:System.Delegate"},"summary":"Builds a union serializer for a type-schema pair.","typeParameters":null}]},{"id":"P:Chr.Avro.Serialization.UnionSerializerBuilderCase.Codec","kind":"property","name":"Codec","overloads":[{"id":"P:Chr.Avro.Serialization.UnionSerializerBuilderCase.Codec","returns":{"summary":null,"type":"T:Chr.Avro.Serialization.IBinaryCodec"},"summary":"The codec that generated serializers should use for write operations.","typeParameters":null}]},{"id":"M:Chr.Avro.Serialization.UnionSerializerBuilderCase.SelectType","kind":"method","name":"SelectType","overloads":[{"id":"M:Chr.Avro.Serialization.UnionSerializerBuilderCase.SelectType(Chr.Avro.Resolution.TypeResolution,Chr.Avro.Abstract.Schema)","returns":{"summary":"The resolution to build the child serializer with. The type in the original resolution\n            must be assignable from the type in the returned resolution.","type":"T:Chr.Avro.Resolution.TypeResolution"},"summary":"Customizes type resolutions for the children of a union schema. Can be overriden by\n            custom cases to support polymorphic mapping.","typeParameters":null}]},{"id":"P:Chr.Avro.Serialization.UnionSerializerBuilderCase.SerializerBuilder","kind":"property","name":"SerializerBuilder","overloads":[{"id":"P:Chr.Avro.Serialization.UnionSerializerBuilderCase.SerializerBuilder","returns":{"summary":null,"type":"T:Chr.Avro.Serialization.IBinarySerializerBuilder"},"summary":"The serializer builder to use to build child serializers.","typeParameters":null}]}],"namespace":{"id":"N:Chr.Avro.Serialization","name":"Chr.Avro.Serialization"},"typeParameters":null,"typeSignatures":[{"language":"C#","value":"public class UnionSerializerBuilderCase : Chr.Avro.Serialization.BinarySerializerBuilderCase"},{"language":"ILAsm","value":".class public auto ansi beforefieldinit UnionSerializerBuilderCase extends Chr.Avro.Serialization.BinarySerializerBuilderCase"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"T:Chr.Avro.Serialization.UnionSerializerBuilderCase"}}}