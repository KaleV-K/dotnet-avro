{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/angelscript.js"],"names":["module","exports","hljs","builtInTypeMode","className","begin","objectHandleMode","genericMode","end","contains","aliases","keywords","illegal","BACKSLASH_ESCAPE","relevance","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","beginKeywords"],"mappings":"4EAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,CACAC,UAAA,WACAC,MAAA,2HAEAC,EAAA,CACAF,UAAA,SACAC,MAAA,kBAEAE,EAAA,CACAH,UAAA,UACAC,MAAA,IACAG,IAAA,IACAC,SAAA,CAAAN,EAAAG,IAIA,OAFAH,EAAAM,SAAA,CAAAF,GACAD,EAAAG,SAAA,CAAAF,GACA,CACAG,QAAA,QACAC,SAAA,kSAEAC,QAAA,qDACAH,SAAA,EAEAL,UAAA,SACAC,MAAA,IACAG,IAAA,IACAI,QAAA,MACAH,SAAA,CAAAP,EAAAW,kBACAC,UAAA,GACK,CAELV,UAAA,SACAC,MAAA,IACAG,IAAA,IACAI,QAAA,MACAH,SAAA,CAAAP,EAAAW,kBACAC,UAAA,GAEA,CACAV,UAAA,SACAC,MAAA,MACAG,IAAA,OACKN,EAAAa,oBACLb,EAAAc,qBACA,CAEAC,cAAA,sBACAT,IAAA,IACAI,QAAA,UACAH,SAAA,EAEAL,UAAA,SACAC,MAAA,mBAEK,CAELY,cAAA,QACAT,IAAA,IACAI,QAAA,UACAH,SAAA,EAEAL,UAAA,SACAC,MAAA,gBACAI,SAAA,EACAJ,MAAA,WACAI,SAAA,EACAL,UAAA,SACAC,MAAA,uBAIKF,EACLG,EACA,CAEAF,UAAA,UACAC,MAAA,wBACK,CAELD,UAAA,SACAC,MAAA","file":"react-syntax-highlighter_languages_highlight_angelscript-ae3db7747fa05b73f390.js","sourcesContent":["module.exports = function (hljs) {\n  var builtInTypeMode = {\n    className: 'built_in',\n    begin: '\\\\b(void|bool|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|string|ref|array|double|float|auto|dictionary)'\n  };\n  var objectHandleMode = {\n    className: 'symbol',\n    begin: '[a-zA-Z0-9_]+@'\n  };\n  var genericMode = {\n    className: 'keyword',\n    begin: '<',\n    end: '>',\n    contains: [builtInTypeMode, objectHandleMode]\n  };\n  builtInTypeMode.contains = [genericMode];\n  objectHandleMode.contains = [genericMode];\n  return {\n    aliases: ['asc'],\n    keywords: 'for in|0 break continue while do|0 return if else case switch namespace is cast ' + 'or and xor not get|0 in inout|10 out override set|0 private public const default|0 ' + 'final shared external mixin|10 enum typedef funcdef this super import from interface ' + 'abstract|0 try catch protected explicit',\n    // avoid close detection with C# and JS\n    illegal: '(^using\\\\s+[A-Za-z0-9_\\\\.]+;$|\\\\bfunction\\s*[^\\\\(])',\n    contains: [{\n      // 'strings'\n      className: 'string',\n      begin: '\\'',\n      end: '\\'',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE],\n      relevance: 0\n    }, {\n      // \"strings\"\n      className: 'string',\n      begin: '\"',\n      end: '\"',\n      illegal: '\\\\n',\n      contains: [hljs.BACKSLASH_ESCAPE],\n      relevance: 0\n    }, // \"\"\"heredoc strings\"\"\"\n    {\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"'\n    }, hljs.C_LINE_COMMENT_MODE, // single-line comments\n    hljs.C_BLOCK_COMMENT_MODE, // comment blocks\n    {\n      // interface or namespace declaration\n      beginKeywords: 'interface namespace',\n      end: '{',\n      illegal: '[;.\\\\-]',\n      contains: [{\n        // interface or namespace name\n        className: 'symbol',\n        begin: '[a-zA-Z0-9_]+'\n      }]\n    }, {\n      // class declaration\n      beginKeywords: 'class',\n      end: '{',\n      illegal: '[;.\\\\-]',\n      contains: [{\n        // class name\n        className: 'symbol',\n        begin: '[a-zA-Z0-9_]+',\n        contains: [{\n          begin: '[:,]\\\\s*',\n          contains: [{\n            className: 'symbol',\n            begin: '[a-zA-Z0-9_]+'\n          }]\n        }]\n      }]\n    }, builtInTypeMode, // built-in types\n    objectHandleMode, // object handles\n    {\n      // literals\n      className: 'literal',\n      begin: '\\\\b(null|true|false)'\n    }, {\n      // numbers\n      className: 'number',\n      begin: '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?f?|\\\\.\\\\d+f?)([eE][-+]?\\\\d+f?)?)'\n    }]\n  };\n};"],"sourceRoot":""}