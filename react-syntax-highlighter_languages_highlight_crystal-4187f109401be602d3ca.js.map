{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/crystal.js"],"names":["module","exports","hljs","NUM_SUFFIX","CRYSTAL_METHOD_RE","CRYSTAL_KEYWORDS","keyword","literal","SUBST","className","begin","end","keywords","EXPANSION","variants","recursiveParen","contains","STRING","BACKSLASH_ESCAPE","relevance","CRYSTAL_DEFAULT_CONTAINS","inherit","QUOTE_STRING_MODE","HASH_COMMENT_MODE","beginKeywords","illegal","TITLE_MODE","endsParent","UNDERSCORE_IDENT_RE","slice","aliases","lexemes"],"mappings":"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","file":"react-syntax-highlighter_languages_highlight_crystal-4187f109401be602d3ca.js","sourcesContent":["module.exports = function (hljs) {\n  var NUM_SUFFIX = '(_[uif](8|16|32|64))?';\n  var CRYSTAL_IDENT_RE = '[a-zA-Z_]\\\\w*[!?=]?';\n  var RE_STARTER = '!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|' + '>>|>|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n  var CRYSTAL_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\][=?]?';\n  var CRYSTAL_KEYWORDS = {\n    keyword: 'abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' + 'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' + 'return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield ' + '__DIR__ __END_LINE__ __FILE__ __LINE__',\n    literal: 'false nil true'\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '#{',\n    end: '}',\n    keywords: CRYSTAL_KEYWORDS\n  };\n  var EXPANSION = {\n    className: 'template-variable',\n    variants: [{\n      begin: '\\\\{\\\\{',\n      end: '\\\\}\\\\}'\n    }, {\n      begin: '\\\\{%',\n      end: '%\\\\}'\n    }],\n    keywords: CRYSTAL_KEYWORDS\n  };\n\n  function recursiveParen(begin, end) {\n    var contains = [{\n      begin: begin,\n      end: end\n    }];\n    contains[0].contains = contains;\n    return contains;\n  }\n\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /`/,\n      end: /`/\n    }, {\n      begin: '%w?\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%w?\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%w?{',\n      end: '}',\n      contains: recursiveParen('{', '}')\n    }, {\n      begin: '%w?<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%w?/',\n      end: '/'\n    }, {\n      begin: '%w?%',\n      end: '%'\n    }, {\n      begin: '%w?-',\n      end: '-'\n    }, {\n      begin: '%w?\\\\|',\n      end: '\\\\|'\n    }, {\n      begin: /<<-\\w+$/,\n      end: /^\\s*\\w+$/\n    }],\n    relevance: 0\n  };\n  var Q_STRING = {\n    className: 'string',\n    variants: [{\n      begin: '%q\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%q\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%q{',\n      end: '}',\n      contains: recursiveParen('{', '}')\n    }, {\n      begin: '%q<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%q/',\n      end: '/'\n    }, {\n      begin: '%q%',\n      end: '%'\n    }, {\n      begin: '%q-',\n      end: '-'\n    }, {\n      begin: '%q\\\\|',\n      end: '\\\\|'\n    }, {\n      begin: /<<-'\\w+'$/,\n      end: /^\\s*\\w+$/\n    }],\n    relevance: 0\n  };\n  var REGEXP = {\n    begin: '(' + RE_STARTER + ')\\\\s*',\n    contains: [{\n      className: 'regexp',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      variants: [{\n        begin: '//[a-z]*',\n        relevance: 0\n      }, {\n        begin: '/',\n        end: '/[a-z]*'\n      }, {\n        begin: '%r\\\\(',\n        end: '\\\\)',\n        contains: recursiveParen('\\\\(', '\\\\)')\n      }, {\n        begin: '%r\\\\[',\n        end: '\\\\]',\n        contains: recursiveParen('\\\\[', '\\\\]')\n      }, {\n        begin: '%r{',\n        end: '}',\n        contains: recursiveParen('{', '}')\n      }, {\n        begin: '%r<',\n        end: '>',\n        contains: recursiveParen('<', '>')\n      }, {\n        begin: '%r/',\n        end: '/'\n      }, {\n        begin: '%r%',\n        end: '%'\n      }, {\n        begin: '%r-',\n        end: '-'\n      }, {\n        begin: '%r\\\\|',\n        end: '\\\\|'\n      }]\n    }],\n    relevance: 0\n  };\n  var REGEXP2 = {\n    className: 'regexp',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: '%r\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%r\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%r{',\n      end: '}',\n      contains: recursiveParen('{', '}')\n    }, {\n      begin: '%r<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%r/',\n      end: '/'\n    }, {\n      begin: '%r%',\n      end: '%'\n    }, {\n      begin: '%r-',\n      end: '-'\n    }, {\n      begin: '%r\\\\|',\n      end: '\\\\|'\n    }],\n    relevance: 0\n  };\n  var ATTRIBUTE = {\n    className: 'meta',\n    begin: '@\\\\[',\n    end: '\\\\]',\n    contains: [hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      className: 'meta-string'\n    })]\n  };\n  var CRYSTAL_DEFAULT_CONTAINS = [EXPANSION, STRING, Q_STRING, REGEXP, REGEXP2, ATTRIBUTE, hljs.HASH_COMMENT_MODE, {\n    className: 'class',\n    beginKeywords: 'class module struct',\n    end: '$|;',\n    illegal: /=/,\n    contains: [hljs.HASH_COMMENT_MODE, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'\n    }), {\n      begin: '<'\n    } // relevance booster for inheritance\n    ]\n  }, {\n    className: 'class',\n    beginKeywords: 'lib enum union',\n    end: '$|;',\n    illegal: /=/,\n    contains: [hljs.HASH_COMMENT_MODE, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'\n    })],\n    relevance: 10\n  }, {\n    className: 'function',\n    beginKeywords: 'def',\n    end: /\\B\\b/,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_METHOD_RE,\n      endsParent: true\n    })]\n  }, {\n    className: 'function',\n    beginKeywords: 'fun macro',\n    end: /\\B\\b/,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_METHOD_RE,\n      endsParent: true\n    })],\n    relevance: 5\n  }, {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '(\\\\!|\\\\?)?:',\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ':',\n    contains: [STRING, {\n      begin: CRYSTAL_METHOD_RE\n    }],\n    relevance: 0\n  }, {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b0b([01_]*[01])' + NUM_SUFFIX\n    }, {\n      begin: '\\\\b0o([0-7_]*[0-7])' + NUM_SUFFIX\n    }, {\n      begin: '\\\\b0x([A-Fa-f0-9_]*[A-Fa-f0-9])' + NUM_SUFFIX\n    }, {\n      begin: '\\\\b(([0-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9_]*[0-9])?([eE][+-]?[0-9_]*[0-9])?)' + NUM_SUFFIX\n    }],\n    relevance: 0\n  }];\n  SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;\n  EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION\n\n  return {\n    aliases: ['cr'],\n    lexemes: CRYSTAL_IDENT_RE,\n    keywords: CRYSTAL_KEYWORDS,\n    contains: CRYSTAL_DEFAULT_CONTAINS\n  };\n};"],"sourceRoot":""}