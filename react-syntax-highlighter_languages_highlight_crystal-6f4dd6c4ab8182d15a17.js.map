{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/crystal.js"],"names":["module","exports","hljs","NUM_SUFFIX","CRYSTAL_METHOD_RE","CRYSTAL_KEYWORDS","keyword","literal","SUBST","className","begin","end","keywords","EXPANSION","variants","recursiveParen","contains","STRING","BACKSLASH_ESCAPE","relevance","CRYSTAL_DEFAULT_CONTAINS","inherit","QUOTE_STRING_MODE","HASH_COMMENT_MODE","beginKeywords","illegal","TITLE_MODE","endsParent","UNDERSCORE_IDENT_RE","slice","aliases","lexemes"],"mappings":"4EAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,wBAGAC,EAAA,wFACAC,EAAA,CACAC,QAAA,qXACAC,QAAA,kBAEAC,EAAA,CACAC,UAAA,QACAC,MAAA,KACAC,IAAA,IACAC,SAAAP,GAEAQ,EAAA,CACAJ,UAAA,oBACAK,SAAA,EACAJ,MAAA,SACAC,IAAA,UACK,CACLD,MAAA,OACAC,IAAA,SAEAC,SAAAP,GAGA,SAAAU,EAAAL,EAAAC,GACA,IAAAK,EAAA,EACAN,QACAC,QAGA,OADAK,EAAA,GAAAA,WACAA,EAGA,IAAAC,EAAA,CACAR,UAAA,SACAO,SAAA,CAAAd,EAAAgB,iBAAAV,GACAM,SAAA,EACAJ,MAAA,IACAC,IAAA,KACK,CACLD,MAAA,IACAC,IAAA,KACK,CACLD,MAAA,IACAC,IAAA,KACK,CACLD,MAAA,SACAC,IAAA,MACAK,SAAAD,EAAA,cACK,CACLL,MAAA,SACAC,IAAA,MACAK,SAAAD,EAAA,cACK,CACLL,MAAA,OACAC,IAAA,IACAK,SAAAD,EAAA,IAAiC,MAC5B,CACLL,MAAA,OACAC,IAAA,IACAK,SAAAD,EAAA,UACK,CACLL,MAAA,OACAC,IAAA,KACK,CACLD,MAAA,OACAC,IAAA,KACK,CACLD,MAAA,OACAC,IAAA,KACK,CACLD,MAAA,SACAC,IAAA,OACK,CACLD,MAAA,UACAC,IAAA,aAEAQ,UAAA,GA2HAC,EAAA,CAAAP,EAAAI,EAzHA,CACAR,UAAA,SACAK,SAAA,EACAJ,MAAA,QACAC,IAAA,MACAK,SAAAD,EAAA,cACK,CACLL,MAAA,QACAC,IAAA,MACAK,SAAAD,EAAA,cACK,CACLL,MAAA,MACAC,IAAA,IACAK,SAAAD,EAAA,IAAiC,MAC5B,CACLL,MAAA,MACAC,IAAA,IACAK,SAAAD,EAAA,UACK,CACLL,MAAA,MACAC,IAAA,KACK,CACLD,MAAA,MACAC,IAAA,KACK,CACLD,MAAA,MACAC,IAAA,KACK,CACLD,MAAA,QACAC,IAAA,OACK,CACLD,MAAA,YACAC,IAAA,aAEAQ,UAAA,GAEA,CACAT,MAAA,+IACAM,SAAA,EACAP,UAAA,SACAO,SAAA,CAAAd,EAAAgB,iBAAAV,GACAM,SAAA,EACAJ,MAAA,WACAS,UAAA,GACO,CACPT,MAAA,IACAC,IAAA,WACO,CACPD,MAAA,QACAC,IAAA,MACAK,SAAAD,EAAA,cACO,CACPL,MAAA,QACAC,IAAA,MACAK,SAAAD,EAAA,cACO,CACPL,MAAA,MACAC,IAAA,IACAK,SAAAD,EAAA,IAAmC,MAC5B,CACPL,MAAA,MACAC,IAAA,IACAK,SAAAD,EAAA,UACO,CACPL,MAAA,MACAC,IAAA,KACO,CACPD,MAAA,MACAC,IAAA,KACO,CACPD,MAAA,MACAC,IAAA,KACO,CACPD,MAAA,QACAC,IAAA,UAGAQ,UAAA,GAEA,CACAV,UAAA,SACAO,SAAA,CAAAd,EAAAgB,iBAAAV,GACAM,SAAA,EACAJ,MAAA,QACAC,IAAA,MACAK,SAAAD,EAAA,cACK,CACLL,MAAA,QACAC,IAAA,MACAK,SAAAD,EAAA,cACK,CACLL,MAAA,MACAC,IAAA,IACAK,SAAAD,EAAA,IAAiC,MAC5B,CACLL,MAAA,MACAC,IAAA,IACAK,SAAAD,EAAA,UACK,CACLL,MAAA,MACAC,IAAA,KACK,CACLD,MAAA,MACAC,IAAA,KACK,CACLD,MAAA,MACAC,IAAA,KACK,CACLD,MAAA,QACAC,IAAA,QAEAQ,UAAA,GAEA,CACAV,UAAA,OACAC,MAAA,OACAC,IAAA,MACAK,SAAA,CAAAd,EAAAmB,QAAAnB,EAAAoB,kBAAA,CACAb,UAAA,kBAGAP,EAAAqB,kBAAA,CACAd,UAAA,QACAe,cAAA,sBACAb,IAAA,MACAc,QAAA,IACAT,SAAA,CAAAd,EAAAqB,kBAAArB,EAAAmB,QAAAnB,EAAAwB,WAAA,CACAhB,MAAA,qCACK,CACLA,MAAA,OAGG,CACHD,UAAA,QACAe,cAAA,iBACAb,IAAA,MACAc,QAAA,IACAT,SAAA,CAAAd,EAAAqB,kBAAArB,EAAAmB,QAAAnB,EAAAwB,WAAA,CACAhB,MAAA,sCAEAS,UAAA,IACG,CACHV,UAAA,WACAe,cAAA,MACAb,IAAA,OACAK,SAAA,CAAAd,EAAAmB,QAAAnB,EAAAwB,WAAA,CACAhB,MAAAN,EACAuB,YAAA,MAEG,CACHlB,UAAA,WACAe,cAAA,YACAb,IAAA,OACAK,SAAA,CAAAd,EAAAmB,QAAAnB,EAAAwB,WAAA,CACAhB,MAAAN,EACAuB,YAAA,KAEAR,UAAA,GACG,CACHV,UAAA,SACAC,MAAAR,EAAA0B,oBAAA,cACAT,UAAA,GACG,CACHV,UAAA,SACAC,MAAA,IACAM,SAAA,CAAAC,EAAA,CACAP,MAAAN,IAEAe,UAAA,GACG,CACHV,UAAA,SACAK,SAAA,EACAJ,MAAA,oBAAAP,GACK,CACLO,MAAA,sBAAAP,GACK,CACLO,MAAA,kCAAAP,GACK,CACLO,MAAA,2EAAAP,IAEAgB,UAAA,IAKA,OAHAX,EAAAQ,SAAAI,EACAP,EAAAG,SAAAI,EAAAS,MAAA,GAEA,CACAC,QAAA,OACAC,QA3QA,sBA4QAnB,SAAAP,EACAW,SAAAI","file":"react-syntax-highlighter_languages_highlight_crystal-6f4dd6c4ab8182d15a17.js","sourcesContent":["module.exports = function (hljs) {\n  var NUM_SUFFIX = '(_[uif](8|16|32|64))?';\n  var CRYSTAL_IDENT_RE = '[a-zA-Z_]\\\\w*[!?=]?';\n  var RE_STARTER = '!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|' + '>>|>|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n  var CRYSTAL_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\][=?]?';\n  var CRYSTAL_KEYWORDS = {\n    keyword: 'abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if ' + 'include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? ' + 'return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield ' + '__DIR__ __END_LINE__ __FILE__ __LINE__',\n    literal: 'false nil true'\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '#{',\n    end: '}',\n    keywords: CRYSTAL_KEYWORDS\n  };\n  var EXPANSION = {\n    className: 'template-variable',\n    variants: [{\n      begin: '\\\\{\\\\{',\n      end: '\\\\}\\\\}'\n    }, {\n      begin: '\\\\{%',\n      end: '%\\\\}'\n    }],\n    keywords: CRYSTAL_KEYWORDS\n  };\n\n  function recursiveParen(begin, end) {\n    var contains = [{\n      begin: begin,\n      end: end\n    }];\n    contains[0].contains = contains;\n    return contains;\n  }\n\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /`/,\n      end: /`/\n    }, {\n      begin: '%w?\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%w?\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%w?{',\n      end: '}',\n      contains: recursiveParen('{', '}')\n    }, {\n      begin: '%w?<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%w?/',\n      end: '/'\n    }, {\n      begin: '%w?%',\n      end: '%'\n    }, {\n      begin: '%w?-',\n      end: '-'\n    }, {\n      begin: '%w?\\\\|',\n      end: '\\\\|'\n    }, {\n      begin: /<<-\\w+$/,\n      end: /^\\s*\\w+$/\n    }],\n    relevance: 0\n  };\n  var Q_STRING = {\n    className: 'string',\n    variants: [{\n      begin: '%q\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%q\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%q{',\n      end: '}',\n      contains: recursiveParen('{', '}')\n    }, {\n      begin: '%q<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%q/',\n      end: '/'\n    }, {\n      begin: '%q%',\n      end: '%'\n    }, {\n      begin: '%q-',\n      end: '-'\n    }, {\n      begin: '%q\\\\|',\n      end: '\\\\|'\n    }, {\n      begin: /<<-'\\w+'$/,\n      end: /^\\s*\\w+$/\n    }],\n    relevance: 0\n  };\n  var REGEXP = {\n    begin: '(' + RE_STARTER + ')\\\\s*',\n    contains: [{\n      className: 'regexp',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      variants: [{\n        begin: '//[a-z]*',\n        relevance: 0\n      }, {\n        begin: '/',\n        end: '/[a-z]*'\n      }, {\n        begin: '%r\\\\(',\n        end: '\\\\)',\n        contains: recursiveParen('\\\\(', '\\\\)')\n      }, {\n        begin: '%r\\\\[',\n        end: '\\\\]',\n        contains: recursiveParen('\\\\[', '\\\\]')\n      }, {\n        begin: '%r{',\n        end: '}',\n        contains: recursiveParen('{', '}')\n      }, {\n        begin: '%r<',\n        end: '>',\n        contains: recursiveParen('<', '>')\n      }, {\n        begin: '%r/',\n        end: '/'\n      }, {\n        begin: '%r%',\n        end: '%'\n      }, {\n        begin: '%r-',\n        end: '-'\n      }, {\n        begin: '%r\\\\|',\n        end: '\\\\|'\n      }]\n    }],\n    relevance: 0\n  };\n  var REGEXP2 = {\n    className: 'regexp',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: '%r\\\\(',\n      end: '\\\\)',\n      contains: recursiveParen('\\\\(', '\\\\)')\n    }, {\n      begin: '%r\\\\[',\n      end: '\\\\]',\n      contains: recursiveParen('\\\\[', '\\\\]')\n    }, {\n      begin: '%r{',\n      end: '}',\n      contains: recursiveParen('{', '}')\n    }, {\n      begin: '%r<',\n      end: '>',\n      contains: recursiveParen('<', '>')\n    }, {\n      begin: '%r/',\n      end: '/'\n    }, {\n      begin: '%r%',\n      end: '%'\n    }, {\n      begin: '%r-',\n      end: '-'\n    }, {\n      begin: '%r\\\\|',\n      end: '\\\\|'\n    }],\n    relevance: 0\n  };\n  var ATTRIBUTE = {\n    className: 'meta',\n    begin: '@\\\\[',\n    end: '\\\\]',\n    contains: [hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      className: 'meta-string'\n    })]\n  };\n  var CRYSTAL_DEFAULT_CONTAINS = [EXPANSION, STRING, Q_STRING, REGEXP, REGEXP2, ATTRIBUTE, hljs.HASH_COMMENT_MODE, {\n    className: 'class',\n    beginKeywords: 'class module struct',\n    end: '$|;',\n    illegal: /=/,\n    contains: [hljs.HASH_COMMENT_MODE, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'\n    }), {\n      begin: '<' // relevance booster for inheritance\n\n    }]\n  }, {\n    className: 'class',\n    beginKeywords: 'lib enum union',\n    end: '$|;',\n    illegal: /=/,\n    contains: [hljs.HASH_COMMENT_MODE, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?'\n    })],\n    relevance: 10\n  }, {\n    className: 'function',\n    beginKeywords: 'def',\n    end: /\\B\\b/,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_METHOD_RE,\n      endsParent: true\n    })]\n  }, {\n    className: 'function',\n    beginKeywords: 'fun macro',\n    end: /\\B\\b/,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {\n      begin: CRYSTAL_METHOD_RE,\n      endsParent: true\n    })],\n    relevance: 5\n  }, {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '(\\\\!|\\\\?)?:',\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ':',\n    contains: [STRING, {\n      begin: CRYSTAL_METHOD_RE\n    }],\n    relevance: 0\n  }, {\n    className: 'number',\n    variants: [{\n      begin: '\\\\b0b([01_]*[01])' + NUM_SUFFIX\n    }, {\n      begin: '\\\\b0o([0-7_]*[0-7])' + NUM_SUFFIX\n    }, {\n      begin: '\\\\b0x([A-Fa-f0-9_]*[A-Fa-f0-9])' + NUM_SUFFIX\n    }, {\n      begin: '\\\\b(([0-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9_]*[0-9])?([eE][+-]?[0-9_]*[0-9])?)' + NUM_SUFFIX\n    }],\n    relevance: 0\n  }];\n  SUBST.contains = CRYSTAL_DEFAULT_CONTAINS;\n  EXPANSION.contains = CRYSTAL_DEFAULT_CONTAINS.slice(1); // without EXPANSION\n\n  return {\n    aliases: ['cr'],\n    lexemes: CRYSTAL_IDENT_RE,\n    keywords: CRYSTAL_KEYWORDS,\n    contains: CRYSTAL_DEFAULT_CONTAINS\n  };\n};"],"sourceRoot":""}