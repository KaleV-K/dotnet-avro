{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/css.js"],"names":["module","exports","hljs","RULE","begin","returnBegin","end","endsWithParent","contains","className","excludeEnd","starts","APOS_STRING_MODE","QUOTE_STRING_MODE","CSS_NUMBER_MODE","C_BLOCK_COMMENT_MODE","case_insensitive","illegal","lexemes","keywords","relevance"],"mappings":"4EAAAA,EAAAC,QAAA,SAAAC,GACA,IACAC,EAAA,CACAC,MAAA,mBACAC,aAAA,EACAC,IAAA,IACAC,gBAAA,EACAC,SAAA,EACAC,UAAA,YACAL,MAAA,KACAE,IAAA,IACAI,YAAA,EACAC,OAAA,CACAJ,gBAAA,EACAG,YAAA,EACAF,SAAA,EACAJ,MAAA,WACAC,aAAA,EACAG,SAAA,EACAC,UAAA,WACAL,MAAA,UACW,CACXA,MAAA,KACAE,IAAA,KACAE,SAAA,CAAAN,EAAAU,iBAAAV,EAAAW,sBAESX,EAAAY,gBAAAZ,EAAAW,kBAAAX,EAAAU,iBAAAV,EAAAa,qBAAA,CACTN,UAAA,SACAL,MAAA,iBACS,CACTK,UAAA,OACAL,MAAA,mBAKA,OACAY,kBAAA,EACAC,QAAA,YACAT,SAAA,CAAAN,EAAAa,qBAAA,CACAN,UAAA,cACAL,MAAA,mBACK,CACLK,UAAA,iBACAL,MAAA,oBACK,CACLK,UAAA,gBACAL,MAAA,KACAE,IAAA,KACAW,QAAA,KACK,CACLR,UAAA,kBACAL,MAAA,kCACK,CACLA,MAAA,oBACAc,QAAA,UACAC,SAAA,kBACK,CACLf,MAAA,IACAE,IAAA,OAKAW,QAAA,IAEAT,SAAA,EACAC,UAAA,UACAL,MAAA,OACO,CACPA,MAAA,KACAG,gBAAA,EACAG,YAAA,EACAU,UAAA,EACAZ,SAAA,CAAAN,EAAAU,iBAAAV,EAAAW,kBAAAX,EAAAY,oBAEK,CACLL,UAAA,eACAL,MA7EA,0BA8EAgB,UAAA,GACK,CACLhB,MAAA,IACAE,IAAA,IACAW,QAAA,KACAT,SAAA,CAAAN,EAAAa,qBAAAZ","file":"react-syntax-highlighter_languages_highlight_css-07e67032b32a7e62f20b.js","sourcesContent":["module.exports = function (hljs) {\n  var IDENT_RE = '[a-zA-Z-][a-zA-Z0-9_-]*';\n  var RULE = {\n    begin: /[A-Z\\_\\.\\-]+\\s*:/,\n    returnBegin: true,\n    end: ';',\n    endsWithParent: true,\n    contains: [{\n      className: 'attribute',\n      begin: /\\S/,\n      end: ':',\n      excludeEnd: true,\n      starts: {\n        endsWithParent: true,\n        excludeEnd: true,\n        contains: [{\n          begin: /[\\w-]+\\(/,\n          returnBegin: true,\n          contains: [{\n            className: 'built_in',\n            begin: /[\\w-]+/\n          }, {\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE]\n          }]\n        }, hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n          className: 'number',\n          begin: '#[0-9A-Fa-f]+'\n        }, {\n          className: 'meta',\n          begin: '!important'\n        }]\n      }\n    }]\n  };\n  return {\n    case_insensitive: true,\n    illegal: /[=\\/|'\\$]/,\n    contains: [hljs.C_BLOCK_COMMENT_MODE, {\n      className: 'selector-id',\n      begin: /#[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-class',\n      begin: /\\.[A-Za-z0-9_-]+/\n    }, {\n      className: 'selector-attr',\n      begin: /\\[/,\n      end: /\\]/,\n      illegal: '$'\n    }, {\n      className: 'selector-pseudo',\n      begin: /:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/\n    }, {\n      begin: '@(font-face|page)',\n      lexemes: '[a-z-]+',\n      keywords: 'font-face page'\n    }, {\n      begin: '@',\n      end: '[{;]',\n      // at_rule eating first \"{\" is a good thing\n      // because it doesnâ€™t let it to be parsed as\n      // a rule set but instead drops parser into\n      // the default mode which is how it should be.\n      illegal: /:/,\n      // break on Less variables @var: ...\n      contains: [{\n        className: 'keyword',\n        begin: /\\w+/\n      }, {\n        begin: /\\s/,\n        endsWithParent: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE]\n      }]\n    }, {\n      className: 'selector-tag',\n      begin: IDENT_RE,\n      relevance: 0\n    }, {\n      begin: '{',\n      end: '}',\n      illegal: /\\S/,\n      contains: [hljs.C_BLOCK_COMMENT_MODE, RULE]\n    }]\n  };\n};"],"sourceRoot":""}