{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/erlang.js"],"names":["module","exports","hljs","BASIC_ATOM_RE","FUNCTION_NAME_RE","ERLANG_RESERVED","keyword","literal","COMMENT","NUMBER","className","begin","relevance","NAMED_FUN","FUNCTION_CALL","end","returnBegin","contains","endsWithParent","returnEnd","TUPLE","VAR1","VAR2","RECORD_ACCESS","UNDERSCORE_IDENT_RE","BLOCK_STATEMENTS","beginKeywords","keywords","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","BASIC_MODES","PARAMS","aliases","illegal","TITLE_MODE","starts","excludeEnd","lexemes","IDENT_RE"],"mappings":"4EAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,uBACAC,EAAA,IAAAD,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAE,EAAA,CACAC,QAAA,2IACAC,QAAA,cAEAC,EAAAN,EAAAM,QAAA,SACAC,EAAA,CACAC,UAAA,SACAC,MAAA,wDACAC,UAAA,GAEAC,EAAA,CACAF,MAAA,UAAAR,EAAA,SAEAW,EAAA,CACAH,MAAAP,EAAA,MACAW,IAAA,MACAC,aAAA,EACAJ,UAAA,EACAK,SAAA,EACAN,MAAAP,EACAQ,UAAA,GACK,CACLD,MAAA,MACAI,IAAA,MACAG,gBAAA,EACAC,WAAA,EACAP,UAAA,KAIAQ,EAAA,CACAT,MAAA,IACAI,IAAA,IACAH,UAAA,GAGAS,EAAA,CACAV,MAAA,4BACAC,UAAA,GAEAU,EAAA,CACAX,MAAA,qBACAC,UAAA,GAEAW,EAAA,CACAZ,MAAA,IAAAT,EAAAsB,oBACAZ,UAAA,EACAI,aAAA,EACAC,SAAA,EACAN,MAAA,IAAAT,EAAAsB,oBACAZ,UAAA,GACK,CACLD,MAAA,IACAI,IAAA,IACAH,UAAA,KAIAa,EAAA,CACAC,cAAA,0BACAX,IAAA,MACAY,SAAAtB,GAEAoB,EAAAR,SAAA,CAAAT,EAAAK,EAAAX,EAAA0B,QAAA1B,EAAA2B,iBAAA,CACAnB,UAAA,KACGe,EAAAX,EAAAZ,EAAA4B,kBAAArB,EAAAW,EAAAC,EAAAC,EAAAC,GACH,IAAAQ,EAAA,CAAAvB,EAAAK,EAAAY,EAAAX,EAAAZ,EAAA4B,kBAAArB,EAAAW,EAAAC,EAAAC,EAAAC,GACAT,EAAAG,SAAA,GAAAA,SAAAc,EACAX,EAAAH,SAAAc,EACAR,EAAAN,SAAA,GAAAA,SAAAc,EACA,IAAAC,EAAA,CACAtB,UAAA,SACAC,MAAA,MACAI,IAAA,MACAE,SAAAc,GAEA,OACAE,QAAA,QACAN,SAAAtB,EACA6B,QAAA,4CACAjB,SAAA,EACAP,UAAA,WACAC,MAAA,IAAAR,EAAA,UACAY,IAAA,KACAC,aAAA,EACAkB,QAAA,yBACAjB,SAAA,CAAAe,EAAA9B,EAAA0B,QAAA1B,EAAAiC,WAAA,CACAxB,MAAAR,KAEAiC,OAAA,CACArB,IAAA,QACAY,SAAAtB,EACAY,SAAAc,IAEKvB,EAAA,CACLG,MAAA,KACAI,IAAA,MACAH,UAAA,EACAyB,YAAA,EACArB,aAAA,EACAsB,QAAA,IAAApC,EAAAqC,SACAZ,SAAA,0KACAV,SAAA,CAAAe,IACKvB,EAAAP,EAAA4B,kBAAAP,EAAAF,EAAAC,EAAAF,EAAA,CACLT,MAAA","file":"react-syntax-highlighter_languages_highlight_erlang-7d9245eac5da4367b752.js","sourcesContent":["module.exports = function (hljs) {\n  var BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\n  var FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\n  var ERLANG_RESERVED = {\n    keyword: 'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if ' + 'let not of orelse|10 query receive rem try when xor',\n    literal: 'false true'\n  };\n  var COMMENT = hljs.COMMENT('%', '$');\n  var NUMBER = {\n    className: 'number',\n    begin: '\\\\b(\\\\d+#[a-fA-F0-9]+|\\\\d+(\\\\.\\\\d+)?([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n  var NAMED_FUN = {\n    begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+'\n  };\n  var FUNCTION_CALL = {\n    begin: FUNCTION_NAME_RE + '\\\\(',\n    end: '\\\\)',\n    returnBegin: true,\n    relevance: 0,\n    contains: [{\n      begin: FUNCTION_NAME_RE,\n      relevance: 0\n    }, {\n      begin: '\\\\(',\n      end: '\\\\)',\n      endsWithParent: true,\n      returnEnd: true,\n      relevance: 0 // \"contains\" defined later\n\n    }]\n  };\n  var TUPLE = {\n    begin: '{',\n    end: '}',\n    relevance: 0 // \"contains\" defined later\n\n  };\n  var VAR1 = {\n    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\n    relevance: 0\n  };\n  var VAR2 = {\n    begin: '[A-Z][a-zA-Z0-9_]*',\n    relevance: 0\n  };\n  var RECORD_ACCESS = {\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0,\n    returnBegin: true,\n    contains: [{\n      begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: '{',\n      end: '}',\n      relevance: 0 // \"contains\" defined later\n\n    }]\n  };\n  var BLOCK_STATEMENTS = {\n    beginKeywords: 'fun receive if try case',\n    end: 'end',\n    keywords: ERLANG_RESERVED\n  };\n  BLOCK_STATEMENTS.contains = [COMMENT, NAMED_FUN, hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: ''\n  }), BLOCK_STATEMENTS, FUNCTION_CALL, hljs.QUOTE_STRING_MODE, NUMBER, TUPLE, VAR1, VAR2, RECORD_ACCESS];\n  var BASIC_MODES = [COMMENT, NAMED_FUN, BLOCK_STATEMENTS, FUNCTION_CALL, hljs.QUOTE_STRING_MODE, NUMBER, TUPLE, VAR1, VAR2, RECORD_ACCESS];\n  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n  TUPLE.contains = BASIC_MODES;\n  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: BASIC_MODES\n  };\n  return {\n    aliases: ['erl'],\n    keywords: ERLANG_RESERVED,\n    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\n    contains: [{\n      className: 'function',\n      begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(',\n      end: '->',\n      returnBegin: true,\n      illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\n      contains: [PARAMS, hljs.inherit(hljs.TITLE_MODE, {\n        begin: BASIC_ATOM_RE\n      })],\n      starts: {\n        end: ';|\\\\.',\n        keywords: ERLANG_RESERVED,\n        contains: BASIC_MODES\n      }\n    }, COMMENT, {\n      begin: '^-',\n      end: '\\\\.',\n      relevance: 0,\n      excludeEnd: true,\n      returnBegin: true,\n      lexemes: '-' + hljs.IDENT_RE,\n      keywords: '-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn ' + '-import -include -include_lib -compile -define -else -endif -file -behaviour ' + '-behavior -spec',\n      contains: [PARAMS]\n    }, NUMBER, hljs.QUOTE_STRING_MODE, RECORD_ACCESS, VAR1, VAR2, TUPLE, {\n      begin: /\\.$/ // relevance booster\n\n    }]\n  };\n};"],"sourceRoot":""}