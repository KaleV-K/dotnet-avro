{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/gcode.js"],"names":["module","exports","hljs","GCODE_CODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","inherit","C_NUMBER_MODE","begin","C_NUMBER_RE","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","className","end","variants","aliases","case_insensitive","lexemes","keywords","contains","concat"],"mappings":"4EAAAA,EAAAC,QAAA,SAAAC,GACA,IAOAC,EAAA,CAAAD,EAAAE,oBAAAF,EAAAG,qBAAAH,EAAAI,QAAA,WAAAJ,EAAAK,QAAAL,EAAAM,cAAA,CACAC,MAAA,iCAAAP,EAAAQ,cACGR,EAAAK,QAAAL,EAAAS,iBAAA,CACHC,QAAA,OACGV,EAAAK,QAAAL,EAAAW,kBAAA,CACHD,QAAA,OACG,CACHE,UAAA,OACAL,MAAA,2BACG,CACHK,UAAA,OACAL,MAAA,2BACG,CACHK,UAAA,OACAL,MAAA,YACAM,IAAA,UACG,CACHD,UAAA,OACAL,MAAA,uBACG,CACHK,UAAA,WACAL,MAAA,6DACAM,IAAA,sCACG,CACHD,UAAA,SACAE,SAAA,EACAP,MAAA,IACAM,IAAA,OACAH,QAAA,UAGA,OACAK,QAAA,OAGAC,kBAAA,EACAC,QA3CA,oBA4CAC,SA1CA,4FA2CAC,SAAA,EACAP,UAAA,OACAL,MA9CA,OAEA,CACAK,UAAA,OACAL,MAAA,kBA2CKa,OAAAnB","file":"react-syntax-highlighter_languages_highlight_gcode-60abcf369baa7200b5ba.js","sourcesContent":["module.exports = function (hljs) {\n  var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var GCODE_CLOSE_RE = '\\\\%';\n  var GCODE_KEYWORDS = 'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' + 'EQ LT GT NE GE LE OR XOR';\n  var GCODE_START = {\n    className: 'meta',\n    begin: '([O])([0-9]+)'\n  };\n  var GCODE_CODE = [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT(/\\(/, /\\)/), hljs.inherit(hljs.C_NUMBER_MODE, {\n    begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE\n  }), hljs.inherit(hljs.APOS_STRING_MODE, {\n    illegal: null\n  }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  }), {\n    className: 'name',\n    begin: '([G])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'name',\n    begin: '([M])([0-9]+\\\\.?[0-9]?)'\n  }, {\n    className: 'attr',\n    begin: '(VC|VS|#)',\n    end: '(\\\\d+)'\n  }, {\n    className: 'attr',\n    begin: '(VZOFX|VZOFY|VZOFZ)'\n  }, {\n    className: 'built_in',\n    begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n    end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n  }, {\n    className: 'symbol',\n    variants: [{\n      begin: 'N',\n      end: '\\\\d+',\n      illegal: '\\\\W'\n    }]\n  }];\n  return {\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    lexemes: GCODE_IDENT_RE,\n    keywords: GCODE_KEYWORDS,\n    contains: [{\n      className: 'meta',\n      begin: GCODE_CLOSE_RE\n    }, GCODE_START].concat(GCODE_CODE)\n  };\n};"],"sourceRoot":""}