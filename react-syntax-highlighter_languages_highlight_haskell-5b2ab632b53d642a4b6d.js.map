{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/haskell.js"],"names":["module","exports","hljs","COMMENT","variants","contains","PRAGMA","className","begin","end","PREPROCESSOR","CONSTRUCTOR","relevance","LIST","illegal","inherit","TITLE_MODE","aliases","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE"],"mappings":"4EAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,CACAC,SAAA,CAAAF,EAAAC,QAAA,UAAAD,EAAAC,QAAA,KAAuD,KAAO,CAC9DE,SAAA,aAGAC,EAAA,CACAC,UAAA,OACAC,MAAA,MACAC,IAAA,OAEAC,EAAA,CACAH,UAAA,OACAC,MAAA,KACAC,IAAA,KAEAE,EAAA,CACAJ,UAAA,OACAC,MAAA,kBAEAI,UAAA,GAEAC,EAAA,CACAL,MAAA,MACAC,IAAA,MACAK,QAAA,IACAT,SAAA,CAAAC,EAAAI,EAAA,CACAH,UAAA,OACAC,MAAA,0CACKN,EAAAa,QAAAb,EAAAc,WAAA,CACLR,MAAA,kBACKL,IAOL,OACAc,QAAA,OACAC,SAAA,wOACAb,SAAA,CACA,CACAc,cAAA,SACAV,IAAA,QACAS,SAAA,eACAb,SAAA,CAAAQ,EAAAV,GACAW,QAAA,YACK,CACLN,MAAA,eACAC,IAAA,IACAS,SAAA,6BACAb,SAAA,CAAAQ,EAAAV,GACAW,QAAA,YACK,CACLP,UAAA,QACAC,MAAA,8BACAC,IAAA,QACAS,SAAA,8BACAb,SAAA,CAAAM,EAAAE,EAAAV,IACK,CACLI,UAAA,QACAC,MAAA,0BACAC,IAAA,IACAS,SAAA,oCACAb,SAAA,CAAAC,EAAAK,EAAAE,EAhCA,CACAL,MAAA,IACAC,IAAA,IACAJ,SAAAQ,EAAAR,UA6BAF,IACK,CACLgB,cAAA,UACAV,IAAA,IACAJ,SAAA,CAAAM,EAAAE,EAAAV,IACK,CACLgB,cAAA,sBACAV,IAAA,IACAJ,SAAA,CAAAH,EAAAkB,cAAAjB,IACK,CACLK,MAAA,gBACAC,IAAA,IACAS,SAAA,uEACAb,SAAA,CAAAM,EAAAT,EAAAmB,kBAAAlB,IACK,CACLI,UAAA,OACAC,MAAA,kCACAC,IAAA,KAEAH,EAAAI,EAEAR,EAAAmB,kBAAAnB,EAAAkB,cAAAT,EAAAT,EAAAa,QAAAb,EAAAc,WAAA,CACAR,MAAA,mBACKL,EAAA,CACLK,MAAA","file":"react-syntax-highlighter_languages_highlight_haskell-5b2ab632b53d642a4b6d.js","sourcesContent":["module.exports = function (hljs) {\n  var COMMENT = {\n    variants: [hljs.COMMENT('--', '$'), hljs.COMMENT('{-', '-}', {\n      contains: ['self']\n    })]\n  };\n  var PRAGMA = {\n    className: 'meta',\n    begin: '{-#',\n    end: '#-}'\n  };\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*',\n    // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n  var LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [PRAGMA, PREPROCESSOR, {\n      className: 'type',\n      begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n    }, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '[_a-z][\\\\w\\']*'\n    }), COMMENT]\n  };\n  var RECORD = {\n    begin: '{',\n    end: '}',\n    contains: LIST.contains\n  };\n  return {\n    aliases: ['hs'],\n    keywords: 'let in if then else case of where do module import hiding ' + 'qualified type data newtype deriving class instance as default ' + 'infix infixl infixr foreign export ccall stdcall cplusplus ' + 'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [// Top-level constructions.\n    {\n      beginKeywords: 'module',\n      end: 'where',\n      keywords: 'module where',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      begin: '\\\\bimport\\\\b',\n      end: '$',\n      keywords: 'import qualified as hiding',\n      contains: [LIST, COMMENT],\n      illegal: '\\\\W\\\\.|;'\n    }, {\n      className: 'class',\n      begin: '^(\\\\s*)?(class|instance)\\\\b',\n      end: 'where',\n      keywords: 'class family instance where',\n      contains: [CONSTRUCTOR, LIST, COMMENT]\n    }, {\n      className: 'class',\n      begin: '\\\\b(data|(new)?type)\\\\b',\n      end: '$',\n      keywords: 'data family type newtype deriving',\n      contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n    }, {\n      beginKeywords: 'default',\n      end: '$',\n      contains: [CONSTRUCTOR, LIST, COMMENT]\n    }, {\n      beginKeywords: 'infix infixl infixr',\n      end: '$',\n      contains: [hljs.C_NUMBER_MODE, COMMENT]\n    }, {\n      begin: '\\\\bforeign\\\\b',\n      end: '$',\n      keywords: 'foreign import export ccall stdcall cplusplus jvm ' + 'dotnet safe unsafe',\n      contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n    }, {\n      className: 'meta',\n      begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n      end: '$'\n    }, // \"Whitespaces\".\n    PRAGMA, PREPROCESSOR, // Literals and names.\n    // TODO: characters.\n    hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE, CONSTRUCTOR, hljs.inherit(hljs.TITLE_MODE, {\n      begin: '^[_a-z][\\\\w\\']*'\n    }), COMMENT, {\n      begin: '->|<-' // No markup, relevance booster\n\n    }]\n  };\n};"],"sourceRoot":""}