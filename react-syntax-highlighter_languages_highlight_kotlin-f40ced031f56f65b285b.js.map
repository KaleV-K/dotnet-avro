{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/kotlin.js"],"names":["module","exports","hljs","KEYWORDS","keyword","built_in","literal","LABEL","className","begin","UNDERSCORE_IDENT_RE","SUBST","end","contains","APOS_STRING_MODE","C_NUMBER_MODE","VARIABLE","STRING","variants","illegal","BACKSLASH_ESCAPE","ANNOTATION_USE_SITE","ANNOTATION","inherit","KOTLIN_NUMBER_MODE","relevance","aliases","keywords","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","starts","beginKeywords","returnBegin","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent","endsWithParent","excludeBegin","returnEnd"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,CACAC,QAAA,gbAEAC,SAAA,kEACAC,QAAA,mBAYAC,EAAA,CACAC,UAAA,SACAC,MAAAP,EAAAQ,oBAAA,KAGAC,EAAA,CACAH,UAAA,QACAC,MAAA,OACAG,IAAA,IACAC,SAAA,CAAAX,EAAAY,iBAAAZ,EAAAa,gBAEAC,EAAA,CACAR,UAAA,WACAC,MAAA,MAAAP,EAAAQ,qBAEAO,EAAA,CACAT,UAAA,SACAU,SAAA,EACAT,MAAA,MACAG,IAAA,MACAC,SAAA,CAAAG,EAAAL,IAIA,CACAF,MAAA,IACAG,IAAA,IACAO,QAAA,KACAN,SAAA,CAAAX,EAAAkB,mBACK,CACLX,MAAA,IACAG,IAAA,IACAO,QAAA,KACAN,SAAA,CAAAX,EAAAkB,iBAAAJ,EAAAL,MAGAU,EAAA,CACAb,UAAA,OACAC,MAAA,gFAAAP,EAAAQ,oBAAA,MAEAY,EAAA,CACAd,UAAA,OACAC,MAAA,IAAAP,EAAAQ,oBACAG,SAAA,EACAJ,MAAA,KACAG,IAAA,KACAC,SAAA,CAAAX,EAAAqB,QAAAN,EAAA,CACAT,UAAA,oBAWAgB,EAAA,CACAhB,UAAA,SACAC,MANA,uNAOAgB,UAAA,GAEA,OACAC,QAAA,OACAC,SAAAxB,EACAU,SAAA,CAAAX,EAAA0B,QAAA,kBACAH,UAAA,EACAZ,SAAA,EACAL,UAAA,SACAC,MAAA,iBAEKP,EAAA2B,oBAAA3B,EAAA4B,qBAlFL,CACAtB,UAAA,UACAC,MAAA,mCACAsB,OAAA,CACAlB,SAAA,EACAL,UAAA,SACAC,MAAA,WA4EKF,EAAAc,EAAAC,EAAA,CACLd,UAAA,WACAwB,cAAA,MACApB,IAAA,QACAqB,aAAA,EACAC,YAAA,EACAP,SAAAxB,EACAgB,QAAA,yCACAM,UAAA,EACAZ,SAAA,EACAJ,MAAAP,EAAAQ,oBAAA,UACAuB,aAAA,EACAR,UAAA,EACAZ,SAAA,CAAAX,EAAAiC,wBACO,CACP3B,UAAA,OACAC,MAAA,IACAG,IAAA,IACAe,SAAA,UACAF,UAAA,GACO,CACPjB,UAAA,SACAC,MAAA,KACAG,IAAA,KACAwB,YAAA,EACAT,SAAAxB,EACAsB,UAAA,EACAZ,SAAA,EACAJ,MAAA,IACAG,IAAA,SACAyB,gBAAA,EACAxB,SAAA,EACAL,UAAA,OACAC,MAAAP,EAAAQ,qBACWR,EAAA2B,oBAAA3B,EAAA4B,sBACXL,UAAA,GACSvB,EAAA2B,oBAAA3B,EAAA4B,qBAAAT,EAAAC,EAAAL,EAAAf,EAAAa,gBACFb,EAAA4B,uBACF,CACLtB,UAAA,QACAwB,cAAA,wBACApB,IAAA,WAEAsB,YAAA,EACAf,QAAA,qBACAN,SAAA,EACAmB,cAAA,iDACO9B,EAAAiC,sBAAA,CACP3B,UAAA,OACAC,MAAA,IACAG,IAAA,IACA0B,cAAA,EACAJ,YAAA,EACAT,UAAA,GACO,CACPjB,UAAA,OACAC,MAAA,UACAG,IAAA,WACA0B,cAAA,EACAC,WAAA,GACOlB,EAAAC,IACFL,EAAA,CACLT,UAAA,OACAC,MAAA,kBACAG,IAAA,IACAO,QAAA,MACKK","file":"react-syntax-highlighter_languages_highlight_kotlin-f40ced031f56f65b285b.js","sourcesContent":["module.exports = function (hljs) {\n  var KEYWORDS = {\n    keyword: 'abstract as val var vararg get set class object open private protected public noinline ' + 'crossinline dynamic final enum if else do while for when throw try catch finally ' + 'import package is in fun override companion reified inline lateinit init ' + 'interface annotation data sealed internal infix operator out by constructor super ' + 'tailrec where const inner suspend typealias external expect actual ' + // to be deleted soon\n    'trait volatile transient native default',\n    built_in: 'Byte Short Char Int Long Boolean Float Double Void Unit Nothing',\n    literal: 'true false null'\n  };\n  var KEYWORDS_WITH_LABEL = {\n    className: 'keyword',\n    begin: /\\b(break|continue|return|this)\\b/,\n    starts: {\n      contains: [{\n        className: 'symbol',\n        begin: /@\\w+/\n      }]\n    }\n  };\n  var LABEL = {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '@'\n  }; // for string templates\n\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\${',\n    end: '}',\n    contains: [hljs.APOS_STRING_MODE, hljs.C_NUMBER_MODE]\n  };\n  var VARIABLE = {\n    className: 'variable',\n    begin: '\\\\$' + hljs.UNDERSCORE_IDENT_RE\n  };\n  var STRING = {\n    className: 'string',\n    variants: [{\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      contains: [VARIABLE, SUBST]\n    }, // Can't use built-in modes easily, as we want to use STRING in the meta\n    // context as 'meta-string' and there's no syntax to remove explicitly set\n    // classNames in built-in modes.\n    {\n      begin: '\\'',\n      end: '\\'',\n      illegal: /\\n/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\"',\n      end: '\"',\n      illegal: /\\n/,\n      contains: [hljs.BACKSLASH_ESCAPE, VARIABLE, SUBST]\n    }]\n  };\n  var ANNOTATION_USE_SITE = {\n    className: 'meta',\n    begin: '@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*' + hljs.UNDERSCORE_IDENT_RE + ')?'\n  };\n  var ANNOTATION = {\n    className: 'meta',\n    begin: '@' + hljs.UNDERSCORE_IDENT_RE,\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      contains: [hljs.inherit(STRING, {\n        className: 'meta-string'\n      })]\n    }]\n  }; // https://kotlinlang.org/docs/reference/whatsnew11.html#underscores-in-numeric-literals\n  // According to the doc above, the number mode of kotlin is the same as java 8,\n  // so the code below is copied from java.js\n\n  var KOTLIN_NUMBER_RE = '\\\\b' + '(' + '0[bB]([01]+[01_]+[01]+|[01]+)' + // 0b...\n  '|' + '0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)' + // 0x...\n  '|' + '(' + '([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?' + '|' + '\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)' + ')' + '([eE][-+]?\\\\d+)?' + // octal, decimal, float\n  ')' + '[lLfF]?';\n  var KOTLIN_NUMBER_MODE = {\n    className: 'number',\n    begin: KOTLIN_NUMBER_RE,\n    relevance: 0\n  };\n  return {\n    aliases: ['kt'],\n    keywords: KEYWORDS,\n    contains: [hljs.COMMENT('/\\\\*\\\\*', '\\\\*/', {\n      relevance: 0,\n      contains: [{\n        className: 'doctag',\n        begin: '@[A-Za-z]+'\n      }]\n    }), hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, KEYWORDS_WITH_LABEL, LABEL, ANNOTATION_USE_SITE, ANNOTATION, {\n      className: 'function',\n      beginKeywords: 'fun',\n      end: '[(]|$',\n      returnBegin: true,\n      excludeEnd: true,\n      keywords: KEYWORDS,\n      illegal: /fun\\s+(<.*>)?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,\n      relevance: 5,\n      contains: [{\n        begin: hljs.UNDERSCORE_IDENT_RE + '\\\\s*\\\\(',\n        returnBegin: true,\n        relevance: 0,\n        contains: [hljs.UNDERSCORE_TITLE_MODE]\n      }, {\n        className: 'type',\n        begin: /</,\n        end: />/,\n        keywords: 'reified',\n        relevance: 0\n      }, {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        endsParent: true,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [{\n          begin: /:/,\n          end: /[=,\\/]/,\n          endsWithParent: true,\n          contains: [{\n            className: 'type',\n            begin: hljs.UNDERSCORE_IDENT_RE\n          }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE],\n          relevance: 0\n        }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, ANNOTATION_USE_SITE, ANNOTATION, STRING, hljs.C_NUMBER_MODE]\n      }, hljs.C_BLOCK_COMMENT_MODE]\n    }, {\n      className: 'class',\n      beginKeywords: 'class interface trait',\n      end: /[:\\{(]|$/,\n      // remove 'trait' when removed from KEYWORDS\n      excludeEnd: true,\n      illegal: 'extends implements',\n      contains: [{\n        beginKeywords: 'public protected internal private constructor'\n      }, hljs.UNDERSCORE_TITLE_MODE, {\n        className: 'type',\n        begin: /</,\n        end: />/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      }, {\n        className: 'type',\n        begin: /[,:]\\s*/,\n        end: /[<\\(,]|$/,\n        excludeBegin: true,\n        returnEnd: true\n      }, ANNOTATION_USE_SITE, ANNOTATION]\n    }, STRING, {\n      className: 'meta',\n      begin: \"^#!/usr/bin/env\",\n      end: '$',\n      illegal: '\\n'\n    }, KOTLIN_NUMBER_MODE]\n  };\n};"],"sourceRoot":""}