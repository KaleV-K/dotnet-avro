{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/nimrod.js"],"names":["module","exports","hljs","aliases","keywords","keyword","literal","built_in","contains","className","begin","end","relevance","QUOTE_STRING_MODE","variants","HASH_COMMENT_MODE"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GACA,OACAC,QAAA,QACAC,SAAA,CACAC,QAAA,gXACAC,QAAA,uDACAC,SAAA,4TAEAC,SAAA,EACAC,UAAA,OAEAC,MAAA,MACAC,IAAA,MACAC,UAAA,IACK,CACLH,UAAA,SACAC,MAAA,eACAC,IAAA,IACAH,SAAA,EACAE,MAAA,QAEK,CACLD,UAAA,SACAC,MAAA,oBACAC,IAAA,OACKT,EAAAW,kBAAA,CACLJ,UAAA,OACAC,MAAA,eACAE,UAAA,GACK,CACLH,UAAA,SACAG,UAAA,EACAE,SAAA,EACAJ,MAAA,4DACO,CACPA,MAAA,+CACO,CACPA,MAAA,iDACO,CACPA,MAAA,2CAEKR,EAAAa","file":"react-syntax-highlighter_languages_highlight_nimrod-64ffa75d4c85a1879de1.js","sourcesContent":["module.exports = function (hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword: 'addr and as asm bind block break case cast const continue converter ' + 'discard distinct div do elif else end enum except export finally ' + 'for from generic if import in include interface is isnot iterator ' + 'let macro method mixin mod nil not notin object of or out proc ptr ' + 'raise ref return shl shr static template try tuple type using var ' + 'when while with without xor yield',\n      literal: 'shared guarded stdin stdout stderr result true false',\n      built_in: 'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' + 'float32 float64 bool char string cstring pointer expr stmt void ' + 'auto any range array openarray varargs seq set clong culong cchar ' + 'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' + 'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [{\n      className: 'meta',\n      // Actually pragma\n      begin: /{\\./,\n      end: /\\.}/,\n      relevance: 10\n    }, {\n      className: 'string',\n      begin: /[a-zA-Z]\\w*\"/,\n      end: /\"/,\n      contains: [{\n        begin: /\"\"/\n      }]\n    }, {\n      className: 'string',\n      begin: /([a-zA-Z]\\w*)?\"\"\"/,\n      end: /\"\"\"/\n    }, hljs.QUOTE_STRING_MODE, {\n      className: 'type',\n      begin: /\\b[A-Z]\\w+\\b/,\n      relevance: 0\n    }, {\n      className: 'number',\n      relevance: 0,\n      variants: [{\n        begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/\n      }, {\n        begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/\n      }, {\n        begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/\n      }, {\n        begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/\n      }]\n    }, hljs.HASH_COMMENT_MODE]\n  };\n};"],"sourceRoot":""}