{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/prolog.js"],"names":["module","exports","hljs","PARENTED","begin","end","relevance","LIST","LINE_COMMENT","className","contains","PHRASAL_WORDS_MODE","BACKTICK_STRING","BACKSLASH_ESCAPE","inner","variants","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","concat"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GACA,IAaAC,EAAA,CACAC,MAAA,KACAC,IAAA,KACAC,UAAA,GAEAC,EAAA,CACAH,MAAA,KACAC,IAAA,MAEAG,EAAA,CACAC,UAAA,UACAL,MAAA,IACAC,IAAA,IACAK,SAAA,CAAAR,EAAAS,qBAEAC,EAAA,CACAH,UAAA,SACAL,MAAA,IACAC,IAAA,IACAK,SAAA,CAAAR,EAAAW,mBAgBAC,EAAA,CAhDA,CACAV,MAAA,qBACAE,UAAA,GAEA,CACAG,UAAA,SACAM,SAAA,EACAX,MAAA,sBACK,CACLA,MAAA,mBAEAE,UAAA,GAqCAH,EAJA,CAEAC,MAAA,MAEAG,EAAAC,EAAAN,EAAAc,qBAAAd,EAAAe,kBAAAf,EAAAgB,iBAAAN,EAdA,CACAH,UAAA,SAEAL,MAAA,eAEA,CACAK,UAAA,SACAL,MAAA,UAOAF,EAAAiB,eAGA,OAFAhB,EAAAO,SAAAI,EACAP,EAAAG,SAAAI,EACA,CACAJ,SAAAI,EAAAM,OAAA,EACAhB,MAAA","file":"react-syntax-highlighter_languages_highlight_prolog-ea53f9d08f5db83775dd.js","sourcesContent":["module.exports = function (hljs) {\n  var ATOM = {\n    begin: /[a-z][A-Za-z0-9_]*/,\n    relevance: 0\n  };\n  var VAR = {\n    className: 'symbol',\n    variants: [{\n      begin: /[A-Z][a-zA-Z0-9_]*/\n    }, {\n      begin: /_[A-Za-z0-9_]*/\n    }],\n    relevance: 0\n  };\n  var PARENTED = {\n    begin: /\\(/,\n    end: /\\)/,\n    relevance: 0\n  };\n  var LIST = {\n    begin: /\\[/,\n    end: /\\]/\n  };\n  var LINE_COMMENT = {\n    className: 'comment',\n    begin: /%/,\n    end: /$/,\n    contains: [hljs.PHRASAL_WORDS_MODE]\n  };\n  var BACKTICK_STRING = {\n    className: 'string',\n    begin: /`/,\n    end: /`/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  var CHAR_CODE = {\n    className: 'string',\n    // 0'a etc.\n    begin: /0\\'(\\\\\\'|.)/\n  };\n  var SPACE_CODE = {\n    className: 'string',\n    begin: /0\\'\\\\s/ // 0'\\s\n\n  };\n  var PRED_OP = {\n    // relevance booster\n    begin: /:-/\n  };\n  var inner = [ATOM, VAR, PARENTED, PRED_OP, LIST, LINE_COMMENT, hljs.C_BLOCK_COMMENT_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, BACKTICK_STRING, CHAR_CODE, SPACE_CODE, hljs.C_NUMBER_MODE];\n  PARENTED.contains = inner;\n  LIST.contains = inner;\n  return {\n    contains: inner.concat([{\n      begin: /\\.$/ // relevance booster\n\n    }])\n  };\n};"],"sourceRoot":""}