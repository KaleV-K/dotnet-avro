{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/properties.js"],"names":["module","exports","hljs","WS0","DELIM","KEY_OTHER","DELIM_AND_VALUE","end","relevance","starts","className","contains","begin","case_insensitive","illegal","COMMENT","returnBegin","endsParent"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GAEA,IAAAC,EAAA,aAGAC,EAAA,IAAAD,EAAA,OAAAA,EAAA,eAEAE,EAAA,+BACAC,EAAA,CAEAC,IAAAH,EACAI,UAAA,EACAC,OAAA,CAEAC,UAAA,SACAH,IAAA,IACAC,UAAA,EACAG,SAAA,EACAC,MAAA,cAIA,OACAC,kBAAA,EACAC,QAAA,KACAH,SAAA,CAAAT,EAAAa,QAAA,iBAEA,CACAH,MAtBA,kCAsBAR,EACAY,aAAA,EACAL,SAAA,EACAD,UAAA,OACAE,MA1BA,kCA2BAK,YAAA,EACAT,UAAA,IAEAC,OAAAH,GAEA,CACAM,MAAAP,EAAAD,EACAY,aAAA,EACAR,UAAA,EACAG,SAAA,EACAD,UAAA,OACAE,MAAAP,EACAY,YAAA,EACAT,UAAA,IAEAC,OAAAH,GAEA,CACAI,UAAA,OACAF,UAAA,EACAI,MAAAP,EAAAF,EAAA","file":"react-syntax-highlighter_languages_highlight_properties-9d53cd71e9fea3eec229.js","sourcesContent":["module.exports = function (hljs) {\n  // whitespaces: space, tab, formfeed\n  var WS0 = '[ \\\\t\\\\f]*';\n  var WS1 = '[ \\\\t\\\\f]+'; // delimiter\n\n  var DELIM = '(' + WS0 + '[:=]' + WS0 + '|' + WS1 + ')';\n  var KEY_ALPHANUM = '([^\\\\\\\\\\\\W:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n  var KEY_OTHER = '([^\\\\\\\\:= \\\\t\\\\f\\\\n]|\\\\\\\\.)+';\n  var DELIM_AND_VALUE = {\n    // skip DELIM\n    end: DELIM,\n    relevance: 0,\n    starts: {\n      // value: everything until end of line (again, taking into account backslashes)\n      className: 'string',\n      end: /$/,\n      relevance: 0,\n      contains: [{\n        begin: '\\\\\\\\\\\\n'\n      }]\n    }\n  };\n  return {\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [hljs.COMMENT('^\\\\s*[!#]', '$'), // key: everything until whitespace or = or : (taking into account backslashes)\n    // case of a \"normal\" key\n    {\n      begin: KEY_ALPHANUM + DELIM,\n      returnBegin: true,\n      contains: [{\n        className: 'attr',\n        begin: KEY_ALPHANUM,\n        endsParent: true,\n        relevance: 0\n      }],\n      starts: DELIM_AND_VALUE\n    }, // case of key containing non-alphanumeric chars => relevance = 0\n    {\n      begin: KEY_OTHER + DELIM,\n      returnBegin: true,\n      relevance: 0,\n      contains: [{\n        className: 'meta',\n        begin: KEY_OTHER,\n        endsParent: true,\n        relevance: 0\n      }],\n      starts: DELIM_AND_VALUE\n    }, // case of an empty key\n    {\n      className: 'attr',\n      relevance: 0,\n      begin: KEY_OTHER + WS0 + '$'\n    }]\n  };\n};"],"sourceRoot":""}