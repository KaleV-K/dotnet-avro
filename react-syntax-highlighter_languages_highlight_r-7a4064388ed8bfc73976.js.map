{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/r.js"],"names":["module","exports","hljs","IDENT_RE","contains","HASH_COMMENT_MODE","begin","lexemes","keywords","keyword","literal","relevance","className","end","BACKSLASH_ESCAPE","variants"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,wCACA,OACAC,SAAA,CAAAF,EAAAG,kBAAA,CACAC,MAAAH,EACAI,QAAAJ,EACAK,SAAA,CACAC,QAAA,iLACAC,QAAA,6FAEAC,UAAA,GACK,CAELC,UAAA,SACAN,MAAA,4BACAK,UAAA,GACK,CAELC,UAAA,SACAN,MAAA,+BACAK,UAAA,GACK,CAELC,UAAA,SACAN,MAAA,0BACAK,UAAA,GACK,CAELC,UAAA,SACAN,MAAA,4CACAK,UAAA,GACK,CAELC,UAAA,SACAN,MAAA,mCACAK,UAAA,GACK,CAELL,MAAA,IACAO,IAAA,IACAF,UAAA,GACK,CACLC,UAAA,SACAR,SAAA,CAAAF,EAAAY,kBACAC,SAAA,EACAT,MAAA,IACAO,IAAA,KACO,CACPP,MAAA,IACAO,IAAA","file":"react-syntax-highlighter_languages_highlight_r-7a4064388ed8bfc73976.js","sourcesContent":["module.exports = function (hljs) {\n  var IDENT_RE = '([a-zA-Z]|\\\\.[a-zA-Z.])[a-zA-Z0-9._]*';\n  return {\n    contains: [hljs.HASH_COMMENT_MODE, {\n      begin: IDENT_RE,\n      lexemes: IDENT_RE,\n      keywords: {\n        keyword: 'function if in break next repeat else for return switch while try tryCatch ' + 'stop warning require library attach detach source setMethod setGeneric ' + 'setGroupGeneric setClass ...',\n        literal: 'NULL NA TRUE FALSE T F Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 ' + 'NA_complex_|10'\n      },\n      relevance: 0\n    }, {\n      // hex value\n      className: 'number',\n      begin: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\",\n      relevance: 0\n    }, {\n      // explicit integer\n      className: 'number',\n      begin: \"\\\\d+(?:[eE][+\\\\-]?\\\\d*)?L\\\\b\",\n      relevance: 0\n    }, {\n      // number with trailing decimal\n      className: 'number',\n      begin: \"\\\\d+\\\\.(?!\\\\d)(?:i\\\\b)?\",\n      relevance: 0\n    }, {\n      // number\n      className: 'number',\n      begin: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n      relevance: 0\n    }, {\n      // number with leading decimal\n      className: 'number',\n      begin: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\",\n      relevance: 0\n    }, {\n      // escaped identifier\n      begin: '`',\n      end: '`',\n      relevance: 0\n    }, {\n      className: 'string',\n      contains: [hljs.BACKSLASH_ESCAPE],\n      variants: [{\n        begin: '\"',\n        end: '\"'\n      }, {\n        begin: \"'\",\n        end: \"'\"\n      }]\n    }]\n  };\n};"],"sourceRoot":""}