{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/reasonml.js"],"names":["__webpack_require__","module","exports","hljs","RE_IDENT","RE_MODULE_IDENT","RE_OPERATOR","map","op","split","_char","join","RE_OPERATOR_SPACED","KEYWORDS","keyword","built_in","literal","RE_NUMBER","NUMBER_MODE","className","relevance","variants","begin","OPERATOR_MODE","LIST_CONTENTS_MODES","MODULE_ACCESS_CONTENTS","QUOTE_STRING_MODE","returnBegin","end","contains","PARAMS_CONTENTS","FUNCTION_BLOCK_MODE","keywords","push","CONSTRUCTOR_MODE","illegal","PATTERN_MATCH_BLOCK_MODE","MODULE_ACCESS_MODE","skip","concat","aliases","COMMENT","C_LINE_COMMENT_MODE"],"mappings":"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","file":"react-syntax-highlighter_languages_highlight_reasonml-cfe4128f3fed8754a6f2.js","sourcesContent":["require(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nmodule.exports = function (hljs) {\n  function orReValues(ops) {\n    return ops.map(function (op) {\n      return op.split('').map(function (_char) {\n        return '\\\\' + _char;\n      }).join('');\n    }).join('|');\n  }\n\n  var RE_IDENT = '~?[a-z$_][0-9a-zA-Z$_]*';\n  var RE_MODULE_IDENT = '`?[A-Z$_][0-9a-zA-Z$_]*';\n  var RE_PARAM_TYPEPARAM = '\\'?[a-z$_][0-9a-z$_]*';\n  var RE_PARAM_TYPE = '\\s*:\\s*[a-z$_][0-9a-z$_]*(\\(\\s*(' + RE_PARAM_TYPEPARAM + '\\s*(,' + RE_PARAM_TYPEPARAM + ')*)?\\s*\\))?';\n  var RE_PARAM = RE_IDENT + '(' + RE_PARAM_TYPE + ')?(' + RE_PARAM_TYPE + ')?';\n  var RE_OPERATOR = \"(\" + orReValues(['||', '&&', '++', '**', '+.', '*', '/', '*.', '/.', '...', '|>']) + \"|==|===)\";\n  var RE_OPERATOR_SPACED = \"\\\\s+\" + RE_OPERATOR + \"\\\\s+\";\n  var KEYWORDS = {\n    keyword: 'and as asr assert begin class constraint do done downto else end exception external' + 'for fun function functor if in include inherit initializer' + 'land lazy let lor lsl lsr lxor match method mod module mutable new nonrec' + 'object of open or private rec sig struct then to try type val virtual when while with',\n    built_in: 'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 ref string unit ',\n    literal: 'true false'\n  };\n  var RE_NUMBER = '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' + '0[oO][0-7_]+[Lln]?|' + '0[bB][01_]+[Lln]?|' + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)';\n  var NUMBER_MODE = {\n    className: 'number',\n    relevance: 0,\n    variants: [{\n      begin: RE_NUMBER\n    }, {\n      begin: '\\\\(\\\\-' + RE_NUMBER + '\\\\)'\n    }]\n  };\n  var OPERATOR_MODE = {\n    className: 'operator',\n    relevance: 0,\n    begin: RE_OPERATOR\n  };\n  var LIST_CONTENTS_MODES = [{\n    className: 'identifier',\n    relevance: 0,\n    begin: RE_IDENT\n  }, OPERATOR_MODE, NUMBER_MODE];\n  var MODULE_ACCESS_CONTENTS = [hljs.QUOTE_STRING_MODE, OPERATOR_MODE, {\n    className: 'module',\n    begin: \"\\\\b\" + RE_MODULE_IDENT,\n    returnBegin: true,\n    end: \"\\.\",\n    contains: [{\n      className: 'identifier',\n      begin: RE_MODULE_IDENT,\n      relevance: 0\n    }]\n  }];\n  var PARAMS_CONTENTS = [{\n    className: 'module',\n    begin: \"\\\\b\" + RE_MODULE_IDENT,\n    returnBegin: true,\n    end: \"\\.\",\n    relevance: 0,\n    contains: [{\n      className: 'identifier',\n      begin: RE_MODULE_IDENT,\n      relevance: 0\n    }]\n  }];\n  var PARAMS_MODE = {\n    begin: RE_IDENT,\n    end: '(,|\\\\n|\\\\))',\n    relevance: 0,\n    contains: [OPERATOR_MODE, {\n      className: 'typing',\n      begin: ':',\n      end: '(,|\\\\n)',\n      returnBegin: true,\n      relevance: 0,\n      contains: PARAMS_CONTENTS\n    }]\n  };\n  var FUNCTION_BLOCK_MODE = {\n    className: 'function',\n    relevance: 0,\n    keywords: KEYWORDS,\n    variants: [{\n      begin: '\\\\s(\\\\(\\\\.?.*?\\\\)|' + RE_IDENT + ')\\\\s*=>',\n      end: '\\\\s*=>',\n      returnBegin: true,\n      relevance: 0,\n      contains: [{\n        className: 'params',\n        variants: [{\n          begin: RE_IDENT\n        }, {\n          begin: RE_PARAM\n        }, {\n          begin: /\\(\\s*\\)/\n        }]\n      }]\n    }, {\n      begin: '\\\\s\\\\(\\\\.?[^;\\\\|]*\\\\)\\\\s*=>',\n      end: '\\\\s=>',\n      returnBegin: true,\n      relevance: 0,\n      contains: [{\n        className: 'params',\n        relevance: 0,\n        variants: [PARAMS_MODE]\n      }]\n    }, {\n      begin: '\\\\(\\\\.\\\\s' + RE_IDENT + '\\\\)\\\\s*=>'\n    }]\n  };\n  MODULE_ACCESS_CONTENTS.push(FUNCTION_BLOCK_MODE);\n  var CONSTRUCTOR_MODE = {\n    className: 'constructor',\n    begin: RE_MODULE_IDENT + '\\\\(',\n    end: '\\\\)',\n    illegal: '\\\\n',\n    keywords: KEYWORDS,\n    contains: [hljs.QUOTE_STRING_MODE, OPERATOR_MODE, {\n      className: 'params',\n      begin: '\\\\b' + RE_IDENT\n    }]\n  };\n  var PATTERN_MATCH_BLOCK_MODE = {\n    className: 'pattern-match',\n    begin: '\\\\|',\n    returnBegin: true,\n    keywords: KEYWORDS,\n    end: '=>',\n    relevance: 0,\n    contains: [CONSTRUCTOR_MODE, OPERATOR_MODE, {\n      relevance: 0,\n      className: 'constructor',\n      begin: RE_MODULE_IDENT\n    }]\n  };\n  var MODULE_ACCESS_MODE = {\n    className: 'module-access',\n    keywords: KEYWORDS,\n    returnBegin: true,\n    variants: [{\n      begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\" + RE_IDENT\n    }, {\n      begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\(\",\n      end: \"\\\\)\",\n      returnBegin: true,\n      contains: [FUNCTION_BLOCK_MODE, {\n        begin: '\\\\(',\n        end: '\\\\)',\n        skip: true\n      }].concat(MODULE_ACCESS_CONTENTS)\n    }, {\n      begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+{\",\n      end: \"}\"\n    }],\n    contains: MODULE_ACCESS_CONTENTS\n  };\n  PARAMS_CONTENTS.push(MODULE_ACCESS_MODE);\n  return {\n    aliases: ['re'],\n    keywords: KEYWORDS,\n    illegal: '(:\\\\-|:=|\\\\${|\\\\+=)',\n    contains: [hljs.COMMENT('/\\\\*', '\\\\*/', {\n      illegal: '^(\\\\#,\\\\/\\\\/)'\n    }), {\n      className: 'character',\n      begin: '\\'(\\\\\\\\[^\\']+|[^\\'])\\'',\n      illegal: '\\\\n',\n      relevance: 0\n    }, hljs.QUOTE_STRING_MODE, {\n      className: 'literal',\n      begin: '\\\\(\\\\)',\n      relevance: 0\n    }, {\n      className: 'literal',\n      begin: '\\\\[\\\\|',\n      end: '\\\\|\\\\]',\n      relevance: 0,\n      contains: LIST_CONTENTS_MODES\n    }, {\n      className: 'literal',\n      begin: '\\\\[',\n      end: '\\\\]',\n      relevance: 0,\n      contains: LIST_CONTENTS_MODES\n    }, CONSTRUCTOR_MODE, {\n      className: 'operator',\n      begin: RE_OPERATOR_SPACED,\n      illegal: '\\\\-\\\\->',\n      relevance: 0\n    }, NUMBER_MODE, hljs.C_LINE_COMMENT_MODE, PATTERN_MATCH_BLOCK_MODE, FUNCTION_BLOCK_MODE, {\n      className: 'module-def',\n      begin: \"\\\\bmodule\\\\s+\" + RE_IDENT + \"\\\\s+\" + RE_MODULE_IDENT + \"\\\\s+=\\\\s+{\",\n      end: \"}\",\n      returnBegin: true,\n      keywords: KEYWORDS,\n      relevance: 0,\n      contains: [{\n        className: 'module',\n        relevance: 0,\n        begin: RE_MODULE_IDENT\n      }, {\n        begin: '{',\n        end: '}',\n        skip: true\n      }].concat(MODULE_ACCESS_CONTENTS)\n    }, MODULE_ACCESS_MODE]\n  };\n};"],"sourceRoot":""}