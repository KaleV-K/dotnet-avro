{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/routeros.js"],"names":["module","exports","hljs","STATEMENTS","LITERALS","VAR","className","variants","begin","QUOTE_STRING","end","contains","BACKSLASH_ESCAPE","APOS_STRING","aliases","case_insensitive","lexemes","keywords","literal","keyword","split","join","illegal","COMMENT","relevance","returnBegin","endsWithParent"],"mappings":"6EAAAA,EAAAC,QAKA,SAAAC,GACA,IAAAC,EAAA,mEAKAC,EAAA,qCASAC,EAAA,CACAC,UAAA,WACAC,SAAA,EACAC,MAAA,sBACK,CACLA,MAAA,gBAGAC,EAAA,CACAH,UAAA,SACAE,MAAA,IACAE,IAAA,IACAC,SAAA,CAAAT,EAAAU,iBAAAP,EAAA,CACAC,UAAA,WACAE,MAAA,OACAE,IAAA,KACAC,SAAA,CAAAT,EAAAU,qBAGAC,EAAA,CACAP,UAAA,SACAE,MAAA,IACAE,IAAA,KAKA,OACAI,QAAA,wBACAC,kBAAA,EACAC,QAAA,WACAC,SAAA,CACAC,QAAAd,EACAe,QAAAhB,EAAA,KAAAA,EAAAiB,MAAA,KAAAC,KAAA,WA7CA,mKA6CAD,MAAA,KAAAC,KAAA,OAEAV,SAAA,EAEAJ,SAAA,EACAC,MAAA,KACAE,IAAA,KAEA,CACAF,MAAA,OACAE,IAAA,QAEA,CACAF,MAAA,KACAE,IAAA,KAEA,CACAF,MAAA,KACAE,IAAA,KAEA,CACAF,MAAA,gBACAE,IAAA,KAEA,CACAF,MAAA,OACAE,IAAA,KAEA,CACAF,MAAA,QACAE,IAAA,SAEA,CACAF,MAAA,MACAE,IAAA,KAEA,CACAF,MAAA,UACAE,IAAA,MAEA,CACAF,MAAA,kBACAE,IAAA,MAEAY,QAAA,KACKpB,EAAAqB,QAAA,UAAAd,EAAAI,EAAAR,EAAA,CAELG,MAAA,+BACAgB,UAAA,EACAC,aAAA,EACAd,SAAA,EACAL,UAAA,YACAE,MAAA,SACO,CACPA,MAAA,IACAkB,gBAAA,EACAF,UAAA,EACAb,SAAA,CAAAF,EAAAI,EAAAR,EAAA,CACAC,UAAA,UACAE,MAAA,OAAAJ,EAAAgB,MAAA,KAAAC,KAAA,aAiBA,CAGAb,MAAA,gCAKA,CAEAF,UAAA,SACAE,MAAA,kBAEA,CACAA,MAAA,OArIA,wFAqIAY,MAAA,KAAAC,KAAA,oBACAI,aAAA,EACAd,SAAA,EACAL,UAAA,eAEAE,MAAA,SAEK,CACLF,UAAA,WACAC,SAAA,EACAC,MAAA,oBA7IA,o7BA6IAY,MAAA,KAAAC,KAAA,gBACAG,UAAA,IACO,CACPhB,MAAA","file":"react-syntax-highlighter_languages_highlight_routeros-1f30f0e4badfbb016d1b.js","sourcesContent":["module.exports = // Colors from RouterOS terminal:\n//   green        - #0E9A00\n//   teal         - #0C9A9A\n//   purple       - #99069A\n//   light-brown  - #9A9900\nfunction (hljs) {\n  var STATEMENTS = 'foreach do while for if from to step else on-error and or not in'; // Global commands: Every global command should start with \":\" token, otherwise it will be treated as variable.\n\n  var GLOBAL_COMMANDS = 'global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime'; // Common commands: Following commands available from most sub-menus:\n\n  var COMMON_COMMANDS = 'add remove enable disable set get print export edit find run debug error info warning';\n  var LITERALS = 'true false yes no nothing nil null';\n  var OBJECTS = 'traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firewall firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw'; // print parameters\n  // Several parameters are available for print command:\n  // ToDo: var PARAMETERS_PRINT = 'append as-value brief detail count-only file follow follow-only from interval terse value-list without-paging where info';\n  // ToDo: var OPERATORS = '&& and ! not || or in ~ ^ & << >> + - * /';\n  // ToDo: var TYPES = 'num number bool boolean str string ip ip6-prefix id time array';\n  // ToDo: The following tokens serve as delimiters in the grammar: ()  []  {}  :   ;   $   / \n\n  var VAR_PREFIX = 'global local set for foreach';\n  var VAR = {\n    className: 'variable',\n    variants: [{\n      begin: /\\$[\\w\\d#@][\\w\\d_]*/\n    }, {\n      begin: /\\$\\{(.*?)}/\n    }]\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/,\n    end: /\"/,\n    contains: [hljs.BACKSLASH_ESCAPE, VAR, {\n      className: 'variable',\n      begin: /\\$\\(/,\n      end: /\\)/,\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/\n  };\n  var IPADDR = '((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\b';\n  var IPADDR_wBITMASK = IPADDR + '/(3[0-2]|[1-2][0-9]|\\\\d)'; //////////////////////////////////////////////////////////////////////\n\n  return {\n    aliases: ['routeros', 'mikrotik'],\n    case_insensitive: true,\n    lexemes: /:?[\\w-]+/,\n    keywords: {\n      literal: LITERALS,\n      keyword: STATEMENTS + ' :' + STATEMENTS.split(' ').join(' :') + ' :' + GLOBAL_COMMANDS.split(' ').join(' :')\n    },\n    contains: [{\n      // недопустимые конструкции\n      variants: [{\n        begin: /^@/,\n        end: /$/\n      }, // dns\n      {\n        begin: /\\/\\*/,\n        end: /\\*\\//\n      }, // -- comment\n      {\n        begin: /%%/,\n        end: /$/\n      }, // -- comment\n      {\n        begin: /^'/,\n        end: /$/\n      }, // Monkey one line comment\n      {\n        begin: /^\\s*\\/[\\w-]+=/,\n        end: /$/\n      }, // jboss-cli\n      {\n        begin: /\\/\\//,\n        end: /$/\n      }, // Stan comment\n      {\n        begin: /^\\[\\</,\n        end: /\\>\\]$/\n      }, // F# class declaration?\n      {\n        begin: /<\\//,\n        end: />/\n      }, // HTML tags\n      {\n        begin: /^facet /,\n        end: /\\}/\n      }, // roboconf - лютый костыль )))\n      {\n        begin: '^1\\\\.\\\\.(\\\\d+)$',\n        end: /$/\n      }],\n      illegal: /./\n    }, hljs.COMMENT('^#', '$'), QUOTE_STRING, APOS_STRING, VAR, {\n      // attribute=value\n      begin: /[\\w-]+\\=([^\\s\\{\\}\\[\\]\\(\\)]+)/,\n      relevance: 0,\n      returnBegin: true,\n      contains: [{\n        className: 'attribute',\n        begin: /[^=]+/\n      }, {\n        begin: /=/,\n        endsWithParent: true,\n        relevance: 0,\n        contains: [QUOTE_STRING, APOS_STRING, VAR, {\n          className: 'literal',\n          begin: '\\\\b(' + LITERALS.split(' ').join('|') + ')\\\\b'\n        },\n        /*{\n          // IPv4 addresses and subnets\n          className: 'number',\n          variants: [\n            {begin: IPADDR_wBITMASK+'(,'+IPADDR_wBITMASK+')*'}, //192.168.0.0/24,1.2.3.0/24\n            {begin: IPADDR+'-'+IPADDR},       // 192.168.0.1-192.168.0.3\n            {begin: IPADDR+'(,'+IPADDR+')*'}, // 192.168.0.1,192.168.0.34,192.168.24.1,192.168.0.1\n          ]\n        }, // */\n\n        /*{\n          // MAC addresses and DHCP Client IDs\n          className: 'number',\n          begin: /\\b(1:)?([0-9A-Fa-f]{1,2}[:-]){5}([0-9A-Fa-f]){1,2}\\b/,\n        }, //*/\n        {\n          // Не форматировать не классифицированные значения. Необходимо для исключения подсветки значений как built_in.\n          // className: 'number',  \n          begin: /(\"[^\"]*\"|[^\\s\\{\\}\\[\\]]+)/\n        }] //*/\n\n      }]\n    }, //*/\n    {\n      // HEX values\n      className: 'number',\n      begin: /\\*[0-9a-fA-F]+/\n    }, //*/\n    {\n      begin: '\\\\b(' + COMMON_COMMANDS.split(' ').join('|') + ')([\\\\s\\[\\(]|\\])',\n      returnBegin: true,\n      contains: [{\n        className: 'builtin-name',\n        //'function',\n        begin: /\\w+/\n      }]\n    }, {\n      className: 'built_in',\n      variants: [{\n        begin: '(\\\\.\\\\./|/|\\\\s)((' + OBJECTS.split(' ').join('|') + ');?\\\\s)+',\n        relevance: 10\n      }, {\n        begin: /\\.\\./\n      }]\n    }]\n  };\n};"],"sourceRoot":""}