{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/xml.js"],"names":["module","exports","hljs","TAG_INTERNALS","endsWithParent","illegal","relevance","contains","className","begin","endsParent","variants","end","aliases","case_insensitive","COMMENT","subLanguage","skip","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","keywords","name","starts","returnEnd"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GACA,IACAC,EAAA,CACAC,gBAAA,EACAC,QAAA,IACAC,UAAA,EACAC,SAAA,EACAC,UAAA,OACAC,MAPA,qBAQAH,UAAA,GACK,CACLG,MAAA,OACAH,UAAA,EACAC,SAAA,EACAC,UAAA,SACAE,YAAA,EACAC,SAAA,EACAF,MAAA,IACAG,IAAA,KACS,CACTH,MAAA,IACAG,IAAA,KACS,CACTH,MAAA,sBAKA,OACAI,QAAA,wDACAC,kBAAA,EACAP,SAAA,EACAC,UAAA,OACAC,MAAA,YACAG,IAAA,IACAN,UAAA,GACAC,SAAA,EACAE,MAAA,MACAG,IAAA,SAEKV,EAAAa,QAAA,oBACLT,UAAA,KACK,CACLG,MAAA,kBACAG,IAAA,UACAN,UAAA,IACK,CACLE,UAAA,OACAC,MAAA,SACAG,IAAA,MACAN,UAAA,IACK,CACLG,MAAA,YACAG,IAAA,MACAI,YAAA,MACAT,SAAA,CAEA,CACAE,MAAA,OACAG,IAAA,OACAK,MAAA,GACO,CACPR,MAAA,KACAG,IAAA,IACAK,MAAA,GACO,CACPR,MAAA,KACAG,IAAA,IACAK,MAAA,GACOf,EAAAgB,QAAAhB,EAAAiB,iBAAA,CACPd,QAAA,KACAG,UAAA,KACAD,SAAA,KACAU,MAAA,IACOf,EAAAgB,QAAAhB,EAAAkB,kBAAA,CACPf,QAAA,KACAG,UAAA,KACAD,SAAA,KACAU,MAAA,MAEK,CACLT,UAAA,MAQAC,MAAA,oBACAG,IAAA,IACAS,SAAA,CACAC,KAAA,SAEAf,SAAA,CAAAJ,GACAoB,OAAA,CACAX,IAAA,WACAY,WAAA,EACAR,YAAA,gBAEK,CACLR,UAAA,MAEAC,MAAA,qBACAG,IAAA,IACAS,SAAA,CACAC,KAAA,UAEAf,SAAA,CAAAJ,GACAoB,OAAA,CACAX,IAAA,aACAY,WAAA,EACAR,YAAA,mDAEK,CACLR,UAAA,MACAC,MAAA,MACAG,IAAA,MACAL,SAAA,EACAC,UAAA,OACAC,MAAA,aACAH,UAAA,GACOH","file":"react-syntax-highlighter_languages_highlight_xml-e730b8bb1293f34377ec.js","sourcesContent":["module.exports = function (hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: XML_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /=\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'string',\n        endsParent: true,\n        variants: [{\n          begin: /\"/,\n          end: /\"/\n        }, {\n          begin: /'/,\n          end: /'/\n        }, {\n          begin: /[^\\s\"'=<>`]+/\n        }]\n      }]\n    }]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist'],\n    case_insensitive: true,\n    contains: [{\n      className: 'meta',\n      begin: '<!DOCTYPE',\n      end: '>',\n      relevance: 10,\n      contains: [{\n        begin: '\\\\[',\n        end: '\\\\]'\n      }]\n    }, hljs.COMMENT('<!--', '-->', {\n      relevance: 10\n    }), {\n      begin: '<\\\\!\\\\[CDATA\\\\[',\n      end: '\\\\]\\\\]>',\n      relevance: 10\n    }, {\n      className: 'meta',\n      begin: /<\\?xml/,\n      end: /\\?>/,\n      relevance: 10\n    }, {\n      begin: /<\\?(php)?/,\n      end: /\\?>/,\n      subLanguage: 'php',\n      contains: [// We don't want the php closing tag ?> to close the PHP block when\n      // inside any of the following blocks:\n      {\n        begin: '/\\\\*',\n        end: '\\\\*/',\n        skip: true\n      }, {\n        begin: 'b\"',\n        end: '\"',\n        skip: true\n      }, {\n        begin: 'b\\'',\n        end: '\\'',\n        skip: true\n      }, hljs.inherit(hljs.APOS_STRING_MODE, {\n        illegal: null,\n        className: null,\n        contains: null,\n        skip: true\n      }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        illegal: null,\n        className: null,\n        contains: null,\n        skip: true\n      })]\n    }, {\n      className: 'tag',\n\n      /*\n      The lookahead pattern (?=...) ensures that 'begin' only matches\n      '<style' as a single word, followed by a whitespace or an\n      ending braket. The '$' is needed for the lexeme to be recognized\n      by hljs.subMode() that tests lexemes outside the stream.\n      */\n      begin: '<style(?=\\\\s|>|$)',\n      end: '>',\n      keywords: {\n        name: 'style'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: '</style>',\n        returnEnd: true,\n        subLanguage: ['css', 'xml']\n      }\n    }, {\n      className: 'tag',\n      // See the comment in the <style tag about the lookahead pattern\n      begin: '<script(?=\\\\s|>|$)',\n      end: '>',\n      keywords: {\n        name: 'script'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: '\\<\\/script\\>',\n        returnEnd: true,\n        subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml']\n      }\n    }, {\n      className: 'tag',\n      begin: '</?',\n      end: '/?>',\n      contains: [{\n        className: 'name',\n        begin: /[^\\/><\\s]+/,\n        relevance: 0\n      }, TAG_INTERNALS]\n    }]\n  };\n};"],"sourceRoot":""}